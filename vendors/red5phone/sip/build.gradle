usePlugin 'java'
usePlugin 'war'
usePlugin 'eclipse'

task copyToLib(dependsOn: configurations.default.buildArtifacts, type: Copy) {
    into('lib')
    from configurations.default
    from configurations.default.allArtifacts*.file
}

jar.enabled = true

archivesBaseName = 'sip' 

repositories {
   	add(new org.apache.ivy.plugins.resolver.ChainResolver()) {
       	name = 'remote'
       	returnFirst = true
       	add(new org.apache.ivy.plugins.resolver.URLResolver()) {
       		name = "googlecode"
       		addArtifactPattern "http://red5.googlecode.com/svn/repository/[artifact](-[revision]).[ext]"
       		addArtifactPattern "http://red5.googlecode.com/svn/repository/[organisation]/[artifact](-[revision]).[ext]"
		}
       	add(new org.apache.ivy.plugins.resolver.URLResolver()) {
       		name = "blindside-repos"
       		addArtifactPattern "http://blindside.googlecode.com/svn/repository/[artifact](-[revision]).[ext]"
       		addArtifactPattern "http://blindside.googlecode.com/svn/repository/[organisation]/[artifact](-[revision]).[ext]"
		}			 
       	add(new org.apache.ivy.plugins.resolver.URLResolver()) {
       		name = "maven2-central"
       		m2compatible = true
       		addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[module]/[revision]/[artifact](-[revision]).[ext]"
       		addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[artifact]/[revision]/[artifact](-[revision]).[ext]"
		}  
       	add(new org.apache.ivy.plugins.resolver.URLResolver()) {
       		name = "testng_ibiblio_maven2"
       		m2compatible = true
       		addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[module]/[revision]/[artifact](-[revision])-jdk15.[ext]"
       		addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[artifact]/[revision]/[artifact](-[revision])-jdk15.[ext]"
		}  
   	}
}
    
    	<!-- Documentation -->
<!--
    	<dependency org="net.jcip" name="jcip-annotations" rev="1.0" />
-->    	
    	<!-- Testing support -->
<!--
        <dependency org="org.testng" name="testng" rev="5.8"/>
        <dependency org="commons" name="commons-lang" rev="2.4" />
-->        
        <!-- Logging -->
<!--         
        <dependency name="log4j-over-slf4j" rev="1.5.6" />
        <dependency name="jcl-over-slf4j" rev="1.5.6" />
-->        
<!--
        <dependency org="mina" name="mina-core" rev="2.0.0-M5" />
        <dependency org="mina" name="mina-integration-jmx" rev="2.0.0-M5" />
        <dependency org="mina" name="mina-core" rev="1.1.7" />
        <dependency org="mina" name="mina-integration-jmx" rev="1.1.7" />
-->

dependencies {	  
    providedCompile ':log4j-over-slf4j:1.5.6@jar', 'spring:spring-web:2.5.6@jar', 'javax.servlet:servlet-api:2.5@jar', 'org.apache.mina:mina-core:2.0.0-M6@jar'
    providedCompile 'spring:spring-aop:2.5.6@jar', 'spring:spring-beans:2.5.6@jar', 'spring:spring-context:2.5.6@jar', 'spring:spring-core:2.5.6@jar'
	providedCompile 'org/red5:red5:0.8@jar'
    compile ':logback-core:0.9.14@jar', ':logback-classic:0.9.14@jar', ':slf4j-api:1.5.6@jar'
    compile 'spring:spring-webmvc:2.5.6@jar', 'org.apache.mina:mina-integration-spring:1.1.7@jar'
    compile 'java/media:jmf:2.1.1e@jar', 
}

war.doLast {
  ant.unzip(src: war.archivePath, dest: "$buildDir/sip")
}
   
task deploy(type:Copy) {
	def red5AppsDir = '/usr/share/red5/webapps'
	def sipDir = new File("${red5AppsDir}/sip")
	println "Deleting $sipDir"
	ant.delete(dir: sipDir)
	into(sipDir)
    from "$buildDir/sip"
} 