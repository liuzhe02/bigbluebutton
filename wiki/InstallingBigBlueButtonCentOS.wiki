#summary How to install BigBlueButton on CentOS

These instructions will walk through how to install BigBlueButton from source onto CentOS 5.3.  Installing on CentOS is NOT easy - mostly because there are so many packages for which there are no RPMs, or the only RPMs are in alternative repos.  If you have a choice of OS, use Ubuntu and save yourself a load of time.

Before starting, make sure you have a network connection (especially if you are doing this on a new VM you just set up).

*NOTE THAT THIS IS INCOMPLETE AS OF THIS TIME*

{{{

# running this will tell you what version of CentOS you have:
cat /etc/issue
# this tutorial is based on
# CentOS release 5.3 (Final)


# we'll work mostly from the /tmp/ directory:
cd /tmp

# install JDK 6
yum install java-1.6.0-openjdk

# install MySQL server
yum install mysql-server
service mysqld start
chkconfig mysqld on

# Tomcat6 is not available in the main repos, so we will
# use the jpackage repos:
yum install jpackage-utils
wget http://www.jpackage.org/jpackage17.repo
cat jpackage17.repo | sed 's/1\.7/5.0/' > /etc/yum.repos.d/jpackage5.repo
mv jpackage17.repo /etc/yum.repos.d/
yum makecache

# now you should be able to install tomcat6 easily:
yum install tomcat6

# start tomcat and configure it to automatically start on boot:
service tomcat6 start
chkconfig tomcat6 on

# for compiling your own packages, you will need the development tools
# NOTE: this installs a ton of things - and I'm not exactly sure which
#   one or more were actually needed.  and there's no way i'm uninstalling
#   them all to find out.  so, if you do find out, please comment on this article
yum -y groupinstall "Development Tools"

# some more requirements for packages that we will soon install:
yum install zlib zlib-devel freetype freetype-devel libjpeg libjpeg-devel

# install swftools:
wget http://www.swftools.org/swftools-0.8.1.tar.gz
tar xzf swftools-0.8.1.tar.gz 
cd swftools-0.8.1
./configure 
make
make install
cd ..

# install ImageMagick:
yum install ImageMagick

# nginx also needs an alternative repo - using EPEL
rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-3.noarch.rpm
yum makecache

# now install nginx:
yum install nginx

# install activemq from source:
useradd activemq
wget http://apache.mirror.rafal.ca/activemq/apache-activemq/5.2.0/apache-activemq-5.2.0-bin.tar.gz
tar xzf apache-activemq-5.2.0-bin.tar.gz 
mv apache-activemq-5.2.0 /opt/
ln -s /opt/apache-activemq-5.2.0 /opt/activemq
chown -R activemq.activemq /opt/apache-activemq-5.2.0
chown -R activemq.activemq /opt/activemq

# Now get the init.d file that we created for you
wget http://bigbluebutton.googlecode.com/files/activemq
mv activemq /etc/init.d/

# now make that file executable, start the service and configure it to auto-start
chmod a+x /etc/init.d/activemq
service activemq start
chkconfig activemq on


# now we will install Red5 from source
useradd red5
wget http://build.xuggle.com/job/red5_jdk6_stable/131/artifact/workingcopy/red5-0.8.RC3-build-hudson-red5_jdk6_stable-131.tar.gz
tar xzf red5-0.8.RC3-build-hudson-red5_jdk6_stable-131.tar.gz 
mv red5-0.8.RC3-build-hudson-red5_jdk6_stable-131 /opt/red5-0.8
chown -R red5.red5 /opt/red5-0.8

# Now get the init.d file that we created for you
wget http://bigbluebutton.googlecode.com/files/red5
mv red5 /etc/init.d/

# now chmod the file, start and config auto-start:
chmod a+x /etc/init.d/red5
service red5 start
chkconfig red5 on

}}}


 * Now you need to install the oflaDemo that comes with Red5.  This is a manual process.

{{{

Go to:
http://<YOURIP-OR-DOMAIN>:5080/

Click on "Click here to install demos" and then choose oflaDemo java 6.

Go to:
http://<YOURIP-OR-DOMAIN>:5080/demos/

Click "View demo" under "OFLA DEMO", which should take you to:
http://<YOURIP-OR-DOMAIN>:5080/demos/ofla_demo.html

In the upper right corner, change localhost to your domain or IP, like:
rtmp://<YOURIP-OR-DOMAIN/oflaDemo 
Click connect

You would see a list of available videos. Select one to play.

}}}


 * Now prepare for Asterisk build:

{{{

yum install kernel-devel

# On Xen VM you need:
# yum install kernel-xen-devel

yum install ncurses-devel openssl-devel newt-devel zlib-devel bison

# install dahdi
wget http://downloads.asterisk.org/pub/telephony/dahdi-linux-complete/dahdi-linux-complete-2.2.0.2+2.2.0.tar.gz
tar xzf dahdi-linux-complete-2.2.0.2+2.2.0.tar.gz
cd dahdi-linux-complete-2.2.0.2+2.2.0

# if you get an error about the kernel sources not being installed
#  (and you installed kernel-devel like above says to)
#  try rebooting your machine - you may have run a yum update that
#  updated the kernel version but you are still running on the old
#  version
make all
make install
make config
cd ..

# install asterisk
wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-1.4.25.tar.gz
tar zxvf asterisk-1.4.25.tar.gz
cd asterisk-1.4.25
./configure
make 
make install
make samples
make config
cd ..

# configure asterisk
wget http://bigbluebutton.googlecode.com/files/asterisk-extensions.conf
cat asterisk-extensions.conf >> /etc/asterisk/extensions.conf 

wget http://bigbluebutton.googlecode.com/files/asterisk-sip.conf
cat asterisk-sip.conf >> /etc/asterisk/sip.conf

wget http://bigbluebutton.googlecode.com/files/asterisk-create-sip-accounts.sh
chmod a+x asterisk-create-sip-accounts.sh
./asterisk-create-sip-accounts.sh


# set enabled to yes in manager.conf
cat /etc/asterisk/manager.conf | sed 's/^enabled = no/enabled = yes/' > /tmp/manager.conf
mv /tmp/manager.conf /etc/asterisk/

# add account to manager.conf
echo "

; BigBlueButton: Enable Red5 to connect
[bbb]
secret = secret
permit = 0.0.0.0/0.0.0.0
read = system,call,log,verbose,command,agent,user
write = system,call,log,verbose,command,agent,user
" >> /etc/asterisk/manager.conf


# configure nginx
mkdir -p /etc/nginx/sites-available
mkdir -p /etc/nginx/sites-enabled

wget http://bigbluebutton.googlecode.com/files/nginx-bigbluebutton.conf
wget http://bigbluebutton.googlecode.com/files/nginx.conf
mv -f nginx.conf /etc/nginx/

#### NOTE: If your "hostname" command does not return the proper (working)
#### IP or domain - YOU MUST REPLACE `hostname` with the proper domain or IP
#### manually
cat nginx-bigbluebutton.conf | sed "s/127.0.0.1/`hostname`/" > /etc/nginx/sites-available/bigbluebutton

ln -s /etc/nginx/sites-available/bigbluebutton /etc/nginx/sites-enabled/bigbluebutton

service nginx start
chkconfig nginx on

# download BBB apps
cd /tmp/
mkdir bbb-install
cd bbb-install
wget http://www.bigbluebutton.org/hudson/job/BBB-Trunk-Apps/ws/dist/bigbluebutton-apps-0.5.tar.gz
wget http://www.bigbluebutton.org/hudson/job/BBB-Trunk-Apps-Deskshare/ws/dist/webapps/deskshare.tar.gz
wget http://www.bigbluebutton.org/hudson/job/BBB-Trunk-Client/ws/client.tar.gz
wget http://www.bigbluebutton.org/hudson/job/BBB-Trunk-Web/ws/bigbluebutton-0.1.war
wget http://www.bigbluebutton.org/hudson/job/BBB-Trunk-Config/ws/web//*zip*/web.zip
wget http://www.bigbluebutton.org/hudson/job/bbb-trunk-apps-sip/ws/dist/webapps/sip.tar.gz
wget http://www.bigbluebutton.org/hudson/job/bbb-trunk-apps-video/ws/dist/webapps/video.tar.gz

###### TODO: HERE TOMCAT SECURITY (not necessary on CentOS?)

# configure MySQL database
echo "create database bigbluebutton_dev;" | mysql -u root
echo "grant all on bigbluebutton_dev.* to 'bbb'@'localhost' identified by 'secret';" | mysql -u root
echo "commit;" | mysql -u root

# now install the webapp
cp /tmp/bbb-install/bigbluebutton-0.1.war /var/lib/tomcat6/webapps/bigbluebutton.war

}}}

 * Determine PDF2SWF, CONVERT and GS applications (manual step)
{{{
# Make a note of where pdf2swf is installed
which pdf2swf
 
# You should see something like
# /usr/bin/pdf2swf
  
# Make a note of where the convert application is installed
which convert

# You shoud see something like.
# /usr/bin/convert

# Note where GhostScript is installed
which gs

# You should see something like.
# /usr/bin/gs
}}}

 * Edit bbb-web properties
{{{
vi /var/lib/tomcat6/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties

# Change the following:
#  - swfToolsDir to the directory where pdf2swf is located
#  - imageMagickDir to the directory where convert is located
#  - ghostScriptExec to point to the gs application
#  - change bigbluebutton.web.serverURL=http://<YOUR IP>

}}}

 * back to the automated tasks:

{{{

# restart tomcat
service tomcat6 restart

# make sure that your database was created:
echo "show tables" | mysql -u root bigbluebutton_dev
echo "select * from user" | mysql -u root bigbluebutton_dev

# setup the slide upload folder
mkdir /var/bigbluebutton
chown -R tomcat:adm /var/bigbluebutton
chmod -R 777 /var/bigbluebutton

# setup the red5 apps
tar xzf bigbluebutton-apps-0.5.tar.gz
rsync -a webapps/* /opt/red5-0.8/webapps/
rm -rf webapps

}}}


 * manually edit nano /opt/red5-0.8/conf/red5-core.xml to open the 1936 port

{{{

nano 
# remove the comment BEFORE AND AFTER the 1936 port definition
# you should see something like:
# <!-- You can now add additional ports and ip addresses

}}}
