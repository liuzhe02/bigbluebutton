#summary An overview of the BigBlueButton configuration

<wiki:toc max_depth="3" />

= Overview =

BigBlueButton is comprised of a about [http://www.bigbluebutton.org/content/components 14 open source projects] along with a significant amount of code for web conferencing.  

But like any project, when you break it down into its components, it becomes less complicated.  Here's our attempt to carefully walk through each of the configuration and log files to help you understand how to modify and extend BigBlueButton yourself.


= nginx =

== Configuration files ==

=== /etc/nginx/sites-available/bigbluebutton ===

This sets up the BigBlueButton web site.

{{{
server {
     listen   80;
     server_name  134.117.226.252;  ## 1 ##

     access_log  /var/log/nginx/bigbluebutton.access.log;

      location ~ (/open/|/close/|/idle/|/send/) {
          proxy_pass         http://127.0.0.1:8088;   ## 2 ##
          proxy_redirect     off;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

          client_max_body_size       10m;
          client_body_buffer_size    128k;

          proxy_connect_timeout      90;
          proxy_send_timeout         90;
          proxy_read_timeout         90;

          proxy_buffering            off;
      }


       location /deskshare {
           proxy_pass         http://127.0.0.1:5080;   ## 3 ##
           proxy_redirect     default;
           proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
           client_max_body_size       10m;
           client_body_buffer_size    128k;
           proxy_connect_timeout      90;
           proxy_send_timeout         90;
           proxy_read_timeout         90;
           proxy_buffer_size          4k;
           proxy_buffers              4 32k;
           proxy_busy_buffers_size    64k;
           proxy_temp_file_write_size 64k;
           include    fastcgi_params;
       }


       location /bigbluebutton {
           proxy_pass         http://127.0.0.1:8080;   ## 4 ##
           proxy_redirect     default;
           proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

           client_max_body_size       10m;
           client_body_buffer_size    128k;

           proxy_connect_timeout      90;
           proxy_send_timeout         90;
           proxy_read_timeout         90;

           proxy_buffer_size          4k;
           proxy_buffers              4 32k;
           proxy_busy_buffers_size    64k;
           proxy_temp_file_write_size 64k;

           include    fastcgi_params;
       }

        location / {
          root   /var/www/bigbluebutton-default;   ## 5 ##
          index  index.html index.htm;
        }

        location /client { 
                root    /var/www/bigbluebutton;   ## 6 ##
                index  index.html index.htm;
        }

        #error_page  404  /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   /var/www/nginx-default;
        }
}
}}}
Notes:
  # The server listens on port 80
  # This is the IP address it binds to
  # Tunnel requests to XXX
  # Tunnel request to the deskshare module
  # Document root for requests to BigBlueButton web application (Grails app served by tomcat6)
  # Document root for requests to load BigBlueButton client (Flash application served by nginx)

== Log files ==

=== /var/log/nginx/bigbluebutton.access.log ===
Web log of access to BigBlueButton HTML pages. 

=== /var/log/nginx/error.log ===
Web log of errors generated by nginx based on browser requests. 


= Red5 =

== Configuration files ==

There's nothing specific to change.  Red5 works pretty well right out of the box.

== Log files ==

=== /usr/share/red5/log/bigbluebutton.log ===
Debug output from the BigBlueButton red5 applications.

=== /usr/share/red5/log/deskshare.log ===
Debug output from the deskshare red5 application, which is the red5 server component  for supporting desktop sharing in the BigBlueButton client.

=== /usr/share/red5/log/sip.log ===
Debug output from the sip red5 application, which is the red5 server component (based on red5 phone) for supporting voice over IP in the BigBlueButton client.

=== /usr/share/red5/log/video.log ===
Debug output from the video red5 application, which is the red5 server component for supporting video in the BigBlueButton client.



= tomcat6 =

== Configuration files ==

=== /var/lib/tomcat/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties ===
This is one of the main configuration file for BigBlueButton applications.

{{{
#
# These are the default properites for BigBlueButton Web application

dataSource.url=jdbc:mysql://localhost/bigbluebutton_dev       ##  1 ##
dataSource.username=bbb                                       ##  2 ##
dataSource.password=secret                                    ##  3 ##

swfToolsDir=/bin                                              ##  4 ##
imageMagickDir=/usr/bin                                       ##  5 ##
presentationDir=/var/bigbluebutton                            ##  6 ##
ghostScriptExec=/usr/bin/gs                                   ##  7 ##

beans.presentationService.swfToolsDir=${swfToolsDir}          ##  8 ##
beans.presentationService.imageMagickDir=${imageMagickDir}    ##  9 ##
beans.presentationService.presentationDir=${presentationDir}  ## 10 ##

# Use fullpath to ghostscript executable since the exec names are different
# for each platform.
beans.presentationService.ghostScriptExec=${ghostScriptExec}  ## 11 ##

#
# This URL needs to reference the host running the tomcat server
bigbluebutton.web.serverURL=http://134.117.226.252            ## 12 ##

# This is a workaround for a problem converting PDF files, referenced at
# http://groups.google.com/group/comp.lang.postscript/browse_thread/thread/c2e264ca76534ce0?pli=1
noPdfMarkWorkaround=/etc/bigbluebutton/nopdfmark.ps
beans.presentationService.noPdfMarkWorkaround=${noPdfMarkWorkaround}
}}}

Notes:
  # JDBC connector for mysql
  # username for mysql account for BigBlueButton web apps
  # password for mysql account for BigBlueButton web apps
  # path to swfToolsDir, used to access pdf2swf binary

Here's a link to the [http://code.google.com/p/bigbluebutton/source/browse/trunk/bigbluebutton-web/grails-app/conf/bigbluebutton.properties latest version].
  
== /var/lib/tomcat6/logs ==

=== catalina.yyyy-mm-dd.log ===
General log information from startup of tomcat6

=== localhost.yyyy-mm-dd.log ===
General log information from startup of tomcat applications

= Asterisk =
== Configuration files ===
=== /etc/asterisk/extensions.conf ===

{{{
; BigBlueButton: Setup sample conference
[bigbluebutton]
exten => _.,1,Goto(start-dialplan,s,1)
exten => _.,n,Hangup

[start-dialplan]
exten => s,1,Set(TRIES=1)
exten => s,n,Wait(2)
exten => s,n,Answer
exten => s,n,Goto(prompt,s,1)

[prompt]
exten => s,1,Read(CONF_NUM,conf-getconfno,6,,3,10)
exten => s,n,Goto(bbb-conference,\${CONF_NUM},1)

; Context for participants who joined the voice conference using bbb-voice.
; No need to check if conference is valid as they won't be able to login
; if the conference is invalid.
[bbb-voip]
exten => _XXXX.,1,Agi(agi://localhost/findConference?conference=\${EXTEN})
exten => _XXXX.,n,Playback(conf-placeintoconf)
exten => _XXXX.,n,MeetMe(\${CONFERENCE_FOUND},cdMsT)


[bbb-conference]
exten => _XXXX.,1,Agi(agi://localhost/findConference?conference=\${EXTEN})
exten => _XXXX.,n,GotoIf(\$[\${EXTEN} = \${CONFERENCE_FOUND}]?valid:invalid)
exten => _XXXX.,n(valid),Playback(conf-placeintoconf)
exten => _XXXX.,n,MeetMe(\${CONFERENCE_FOUND},cdMsT)
exten => _XXXX.,n(invalid),Goto(handle-invalid-conference,s,1)

[handle-invalid-conference]
exten => s,1,Playback(conf-invalid)
exten => s,n,GotoIf(\$[\${TRIES} < 3]?try-again:do-not-try-again)
exten => s,n(try-again),Set(TRIES=\$[\${TRIES} + 1])
exten => s,n,Goto(prompt,s,1)
exten => s,n(do-not-try-again),Hangup

[echo-test]
;
; Create an extension, 600, for evaluating echo latency.
;
exten => 600,1,Answer                   ; Do the echo test
exten => 600,n,Playback(demo-echotest)  ; Let them know what's going on
exten => 600,n,Echo                     ; Do the echo test
exten => 600,n,Playback(demo-echodone)  ; Let them know it's over
exten => 600,n,Goto(s,6)                ; Start over
}}}

=== /etc/asterisk/manager.d/bigbluebutton.conf ===

Setup permissions for Asterisk-Java to connect.

{{{
;
; BigBlueButton: Enable Red5 to connect
[bbb]
secret = secret
permit = 0.0.0.0/0.0.0.0
read = system,call,log,verbose,command,agent,user
write = system,call,log,verbose,command,agent,user
}}}

=== /etc/asterisk/sip.conf ===

Entries for sample users for voice over IP.

{{{
;
; BigBlueButton: Echo test sample user
[echotest]
type=friend
username=echotest
insecure=very
secret=secret
qualify=yes
nat=yes
host=dynamic
canreinvite=no
context=echo-test
allow=all

;
; BigBlueButton: Setup sample user to connect over VoIP
[user1]
type=friend
username=user1
insecure=very
secret=secret
qualify=yes
nat=yes
host=dynamic
canreinvite=no
context=bigbluebutton
allow=all

;
; more ...
}}}

= Flash Client =
== Configuration File ==
=== /var/www/bigbluebutton/client/conf/config.xml ===

{{{
<?xml version="1.0" ?>
<config>
    <version>2169-2009-08-11</version>
    <porttest host="192.168.0.100" application="video"/>
        <modules>

                <module name="VideoModule" url="VideoModule.swf"
                        uri="rtmp://192.168.0.100/video"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                />
                <module name="ChatModule" url="ChatModule.swf"
                        uri="rtmp://192.168.0.100/bigbluebutton"
                        loadNextModule="PresentationModule"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                />
                <module name="ViewersModule" url="ViewersModule.swf"
                        uri="rtmp://192.168.0.100/bigbluebutton"
                        host="http://192.168.0.100/bigbluebutton/conference-session/enter"
                        onAppInitEvent="LOAD" loadNextModule="ChatModule"
                        onAppStartEvent="START"
                        onUserLogoutEvent="STOP"
                />
                <module name="ListenersModule" url="ListenersModule.swf"
                        uri="rtmp://192.168.0.100/bigbluebutton"
                        recordingHost="http://192.168.0.100"
                        loadNextModule="DeskShareModule"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                />
                <module name="PresentationModule" url="PresentationModule.swf"
                        uri="rtmp://192.168.0.100/bigbluebutton"
                        host="http://192.168.0.100"
                        loadNextModule="ListenersModule"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                />

                <module name="DeskShareModule" url="DeskShareModule.swf"
                        uri="rtmp://192.168.0.100/deskShare"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                        loadNextModule="PhoneModule"
                />

                <module name="PhoneModule" url="PhoneModule.swf"
                        uri="rtmp://192.168.0.100/sip"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                        loadNextModule="VideoModule"
                />
        </modules>
</config>
}}}

[http://code.google.com/p/bigbluebutton/source/browse/trunk/bigbluebutton-client/src/conf/config.xml Click here to view the latest version]