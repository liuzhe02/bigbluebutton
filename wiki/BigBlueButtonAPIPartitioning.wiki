This a dreaft for the BigBlueButton API partitioning  development, it contains material related to that issue such as design and progress.  

= Introduction =

In this page we are going to describe the design of the BigBlueButton API and the progress for its development. 

The goal for that part of the API development is to enable Third Party application to call the BigBlueButton modules separately. Example of that is, calling chat module or presentation module and enable Third Party application s to to access functionalities related to the loaded modules. 


= Details =

To review the changes and try out the API partitioning you can go to here and check out the API branch [https://github.com/nnoori/bigbluebutton/tree/API here]. Will come later to the details of how to checkout the code and compile the pieces associated with API. 

_Warning: we are at a very early stages for the development of the API partitioning so the code is under ongoing changes and we can't guarantee a total functionality for the system at he moment._

== The API Architecture ==

In this section contains a simple diagram the existing API architecture. The diagram below describes the operation and information exchange for the existing BigBlueButton API. The current development didn't involve any architectural changes for the API calls. (See digram below)

(Need to insert image here) 


*Use cases:*
 
In this section we are going to list the use cases or the scenarios for Third Party application calls for the API's from their side.   

 * Load only one BBB module (i.e. load chat module or voice, etc) when a 3rd party application starts. Green: done with calling one module (Start/Stop), display the module in a single module within the BBB canvas. 

 * Load more than one BBB module (i.e. chat & video, chat & presentation) when 3rd party application starts. (Green: Load 2 modules at the beginning of the 3rd party app) 

 * Load only one BBB module (i.e. load chat module or voice, etc)  in response to an event from a 3rd party application (mouse click, conf call button, etc) (Green: started, now we need to make sure that if clinets start to connect will be loading the right modules) 
 
 * Load more than one module at different times in response to events from the 3rd party application. Example, click to make a call (load voice module) and later click to start the video or click to start a presentation while calling. (Yellow: started and able to load chat and presentation within different tomes) 


*API Calls suggestions for format:*

For the API calls and response we just followed the orginal format that was set for the BBB API and we didn't introduce any changes. 

The API standard calls and format can be found on the [API] page at the [http://code.google.com/p/bigbluebutton/wiki/API#API_Calls API Calls] section. 

*Checkout the code and try out the API's*

To check out the code you can go to the here and check out the BigBlueButton code on the API branch. 

After checking out the code, follow the steps for building and deploying the different pieces that are related to the API and here is how: 

 # bigbluebutton-client part, follow the instructions on how to build and run the client code as described on the [DevelopingBBB] page at the [http://code.google.com/p/bigbluebutton/wiki/DevelopingBBB#Working_on_the_Client_side here]

 # bbb-common-message, follow the instructions on the the [DevelopingBBB] page the [ here] to build and resolve libs.

 # bigbluebutton-apps, follow the instructions on how to build and run the client code as described on the [DevelopingBBB] page the [ here]

 # bigbluebutton-web, follow the instructions on how to build and run the client code as described on the [DevelopingBBB] page at the [http://code.google.com/p/bigbluebutton/wiki/DevelopingBBB#BigBlueButton_Web here]


*How to try out the code*

Here are the available API calls so far:

 # You can load up, start and stop the chat module for the BigBlueButton within the BigBlueButton client canvas so far (we are aiming to load each module in its own frame independently)
 
 * To start Chat Module use
http://YOUR_IP_ADDRESS/bigbluebutton/api/moduleCmd?meetingID=Demo+Meeting&module=ChatModule&cmd=start

 *To stop Chat Module use
http://YOUR_IP_ADDRESS/bigbluebutton/api/moduleCmd?meetingID=Demo+Meeting&module=ChatModule&cmd=stop

 # You can load up, start and stop the chat module for the BigBlueButton within the BigBlueButton client canvas so far (the same gores for aiming to load independently) 
 * To start Presentation Module use
http://YOUR_IP_ADDRESS/bigbluebutton/api/moduleCmd?meetingID=Demo+Meeting&module=ChatModule&cmd=start

 ** To stop Presentation Module use
http://YOUR_IP_ADDRESS/bigbluebutton/api/moduleCmd?meetingID=Demo+Meeting&module=ChatModule&cmd=stop