#summary BigBlueButton Third-Party Integration API.

= NOTE: This page is a DRAFT. =

= Introduction =

This wiki gives a sample implementation of the API for integrating !BigBlueButton with other application. The intent is to create a simple API that enables external applications to use GET requests to  implement common integration scenarios, such as joining a conference.


== Creating a Conference ==
Request BigBlueButton to create a conference with a given ID.

Params:
  id: Numeric ID of a conference to create

Example:
{{{
http://<host>/bigbluebutton/api/conference.form?id=85115
}}}

Response: 
  This request returns back an XML file that contains security tokens that can be used to join the session.

  * moderatorToken - Use this token to join as moderator
  * viewerToken - Use this token to join as viewer

Example:
{{{
  <response>
    <returncode>SUCCESS</returncode>
    <voiceBridge>85115</voiceBridge>
    <moderatorToken>57c05fcb-1005-454c-b5f0-ccdf6b8fd501</moderatorToken>
    <viewerToken>ede35174-bf99-433d-af68-fc64fd325dd6</viewerToken>
  </response>
}}}

Note: You can try this on the command line using curl.

{{{
curl --verbose --request GET http://192.168.0.182/bigbluebutton/api/conference?id=85115
}}}



== Join a conference ==
Using a security token from the above request (which references the associated conference ID), this API call will join a conference.

Params:
  fullname: Participant's display name
  authToken: moderator or viewer token

Example:
{{{
http://<host>/bigbluebutton/api/conference/session?fullname=Richard&authToken=57c05fcb-1005-454c-b5f0-ccdf6b8fd501
}}}



== Example of creating a conference and joining that conference ==
*How it works*

 1. When the page gets loaded, a request (json) is sent to create the conference.
 1. When the response comes in, the values of the authToken hidden fields are changed with values for moderator and viewer tokens.
 1. The user enter's there name in the field for moderator or viewer then click Join.
 1. The user is then logged in and redirected into the BBB client to start up.

{{{
 <html>                                                                  
 <head>                                                                  
 <script type="text/javascript" src="/bigbluebutton/js/jquery-1.3.1.js"></script>          
 <script type="text/javascript">                                         
    $(document).ready(function() {   	
   	 	$.post("/bigbluebutton/api/conference.json", { voiceBridge: "85115"},
  			function(data){
    			// alert("Data Loaded: " + data.voiceBridge + " " + data.moderatorToken + " " + data.viewerToken);
    			
    			// $("div:first").text(data.moderatorToken);
    			// $("div:last").text(data.viewerToken);
    			$("input:first").val(data.moderatorToken);
    			$("input:last").val(data.viewerToken);
  			}, "json"
  		);  		
 	});   
 		
                               
 </script>                                                               
 </head>                                                                 
 <body>                                                                  
   <form action="/bigbluebutton/api/conference/session.html" method="post">
   <!-- IMPORTANT: Make this input the first one as script above relies on it's position to assign the moderatorToken value -->
   <input type="hidden" name="authToken" value="" />
    <table>
      <tbody>
        <tr>
          <td>Enter your name:</td>
          <td><input type="text" name="fullname" value="" /></td>
        </tr>
        <tr>
          <td />
          <td><input type="submit" value="Join as moderator" /></td>
        </tr>
      </tbody>
    </table>
  </form>    
     <form action="/bigbluebutton/api/conference/session.html" method="post">
     
    <table>
      <tbody>
        <tr>
          <td>Enter your name:</td>
          <td><input type="text" name="fullname" value="" /></td>
        </tr>
        <tr>
          <td />
          <td><input type="submit" value="Join as viewer" /></td>
        </tr>
      </tbody>
    </table>
    <!-- IMPORTANT: Make this input the last one as script above relies on it's position to assign the viewerToken value -->
    <input type="hidden" name="authToken" value="" />
  </form>       
  <div></div>
  <div></div>                           
 </body>                                                                 
 </html>

}}}




=== NOTES ===
Perhaps we can use this format

{{{
/api/conference/<security>/<confid>/<token>/<fullname>
}}}

So, creating a conference will be:
{{{
  POST /api/conference/<security>/<confid>
}}}

Joining a conference will be:
{{{
  POST /api/conference/session/<security>/<confid>/<token>/<fullname>
}}}