#summary BigBlueButton Frequently Asked Questions
#labels Phase-Support

<wiki:toc max_depth="3"/>

----

= Welcome =

Welcome to the !BigBlueButton Frequently Asked Questions (FAQ). 

We (the core developers) created this FAQ to help you quickly get started with installation, configuration, and using !BigBlueButton.  If you are a developer, you'll also find lots of answered herein that have been collected from discussions on our mailing lists.

== What if I don't find my answer here? ==

The !BigBlueButton community focuses its support in three mailing lists (all hosted by Google Groups).  They are:

  * [http://groups.google.com/group/bigbluebutton-setup/topics?gvc=2 bigbluebutton-setup] -- Setup, instllation, and configuration questions, such as "How do I configure the !BigBlueButton client?"
  * [http://groups.google.com/group/bigbluebutton-users/topics?gvc=2 bigbluebutton-users] -- End user questions, such as "How do I do X with !BigBlueButton?"
  * [http://groups.google.com/group/bigbluebutton-dev bigbluebutton-dev] -- All other questions, such as "How do I integration !BigBlueButton with application Y?"

The developer mailing list has almost 700 users, so before you post do the following:

  # Scan the FAQ to see if you questions is answered herein
  # Search the archives of the associated mailing list -- there's a good chance someone might have already asked your question and the ensuing discussion might help you as well 
  # If you think you've found a bug, check the [http://code.google.com/p/bigbluebutton/issues/list issues database] first.  

All of the core !BigBlueButton contributions subscribe to all three mailing lists.  Please don't cross post.


== Why is this project called !BigBlueButton? ==

The name comes from the goal of making setting up a virtual classroom as easy as pressing a (metaphorical) big blue button.


== Where is the source? ==
We host the source on [http://github.com/bigbluebutton/bigbluebutton github]. We used to host it on Google Code, but we wanted to move to git because of the advantages it offers over svn.

== What is the open source license used in !BigBlueButton? ==
We use the LGPL license.  Some of the open source components we build on use different licenses, such as red5phone uses the GPL license.


== Where can I find examples of people running !BigBlueButton? ==
We currently don't keep a list of organizations, colleges and universities, and hosting providers who run !BigBlueButton.   We know from downloads there many !BigBlueButton servers running world-wide.  

If you'd like examples and use cases of people running !BigBlueButton, feel free to ask the members of the [http://groups.google.com/group/bigbluebutton-users bbb-users] or [http://groups.google.com/group/bigbluebutton-setup bbb-setup] mailing lists.

== Will !BigBlueButton always stay open source? ==
Yes. We started !BigBlueButton as an open source project, and we intend to keep it that way. One of the main goals we had was to create a large open source community around the project. To further this goal, we are in the process of putting together an [http://bigbluebutton-blog.blogspot.com/2010/07/bigbluebutton-foundation.html independent not-for-profit !BigBlueButton Foundation] (similar to the Eclipse Foundation) to oversee and accelerate the growth of the  !BigBlueButton project. 

= Contributing to !BigBlueButton =

== How can I contribute? == 
The !BigBlueButton exists as the result of many developers who have contributed their time and skills to its development.  

!BigBlueButton may seem complex, but it's not really once you get to know the system.  The !BigBlueButton client is written in !ActionScript.  The !BigBlueButton server components are written in a combination of Java, grails, and scala.  You don't need to learn all these languages to help out, but you should be very comfortable programming in Java as !ActionScript, grails, and scala are all similar to Java.

Before you can contribute as a developer, you need to invest some time into understanding !BigBlueButton's [ArchitectureOverview architecture], [OpenSourceComponents components], and how to setup a [DevelopingBBB development environment].  The source code for !BigBlueButton is hosted at [https://github.com/bigbluebutton/bigbluebutton github], so you'll to understand how [http://progit.org/ git works] and the workflow for distributed software development.  

Like other open source projects, a good place to start is try fixing an [http://code.google.com/p/bigbluebutton/issues/list open issue].  We've tagged a few issues as [http://code.google.com/p/bigbluebutton/issues/list?q=label:FirstProject FirstProject] to make it easy for you to find those issues that are both (relatively simple) to fix but would be meaningful to !BigBlueButton.

You an also browse the bugs by labels: [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=label:Stability&colspec=ID+Type+Status+Priority+Milestone+Owner+Component+Summary&x=priority&y=component&mode=grid&cells=tiles Stability] - [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=label:Usability&colspec=ID+Type+Status+Priority+Milestone+Owner+Component+Summary&sort=&mode=grid&y=Component&x=Priority&cells=tiles&nobtn=Update Usability] - [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=label:Performance&colspec=ID+Type+Status+Priority+Milestone+Owner+Component+Summary&x=priority&y=component&mode=grid&cells=tiles Performance] - [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=component=Localization&colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Component%20Summary Localization] - [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=label:Type-Research&colspec=ID+Type+Status+Priority+Milestone+Owner+Component+Summary&x=priority&y=component&mode=grid&cells=tiles Research].  You could also try tackling one of the [http://code.google.com/p/bigbluebutton/issues/list?can=2&q=type=Enhancement enhancements] to !BigBlueButton.

Some bugs are more important than others.  Stability and usability issues are very important to the !BigBlueButton community.

== I'm not a developer, can I still contribute? ==

Dont' worry if you are not a proficient developer -- there are many ways to help out!  You can become proficient in the installation and configuration of a !BigBlueButton server.  Each month, there are many new users in [http://groups.google.com/group/bigbluebutton-setup/topics?gvc=2 bigbluebutton-setup] that need help with setup of !BigBlueButton, especially setup  [Can_I_provide_external_access_to_a_BigBlueButton_server_behind_m work behind a firewall].    You can [LocalizationOfBBB contribute a language file].  Or you can become an editor of the wiki pages to help provide documentation in a specific area, such as setup of !BigBlueButton on [InstallingBigBlueButtonFreeBSD FreeBSD].   Such assistance  reduces the support load on us and gives us more time to work on improving !BigBlueButton.  

== !BigBlueButton Committer ==

Like many open source projects, at the core of the developer team is small group that have commit rights and the overall responsibility for the quality of the project.  The committers are 

  * Richard Alam, Lead Architect
  * Denis Zgonjanin, Client
  * Fred Dixon, Packaging
  * Jeremy Thomerson, API
  * Tiago Jacobs, red5

The committers have earned this responsibility through years of effort
working on !BigBlueButton and related open source projects (i.e. red5).  In particular, we very much respect Richard's four year-plus effort to create !BigBlueButton.  As the Lead Architect for this project, he has the final say. 

The committers are very active in the support and mentoring of other developers in the [http://groups.google.com/group/bigbluebutton-dev/topics?gvc=2 bigbluebutton-dev] mailing list and, recently, in the 2010 Google Summer of Code (Google paid for two students to work on the project).  

The committer's group is not closed.  Any developer that wishes to become a committer can achieve it through participation.  The decision of expanding the committers group rests with the committers.  

Any source code you submit for inclusion into !BigBlueButton will be reviewed by one (or more) of the committers.   The process for submission and review depends on the complexity of the contribution and requires that you have signed a Contributor License Agreement.  

== Why do I need to sign a Contributor License Agreement to contribute source code? ==

Before we can accept contributions, as an open source project, we're need to ensure there isn't any ambiguity on the ownership of material committed to the project.  Therefore, before we can incorporate your code, we need to have a Contributor License Agreement in place.  For background on our reasons for doing this, please see http://www.oss-watch.ac.uk/resources/cla.xml.

We've adopted to use the Sun Microsystems Contributer Agreement (yes, we know they are now Oracle, but we're using the agreement that Sun had published) as it provides for joint ownership.  Except as set out in the agreement, you (and your employer if you have an intellectual property agreement in place) keep all right, title, and interest in your contribution.  

Please read over the [http://bigbluebutton.googlecode.com/files/Contributor%20Agreement.pdf Contributor Agreement] and, if you (and your employer) are in agreement with its terms, then sign, scan, and e-mail a copy back to Fred Dixon (ffdixon at bigbluebutton _dot_ org).  Note: The agreement is currently between you (and your employer) and Blindside Networks.  When the [http://bigbluebutton-blog.blogspot.com/2010/07/bigbluebutton-foundation.html BigBlueButton foundation] launches, Blindside Networks will assign these agreements to the foundation.

Once we receive the signed Contributor Agreement, we can review your submission for inclusion in !BigBlueButton.  The process for submission depends is different on whether it's a fixing a bug (submitting a patch) or enhancement (submitting a feature).

=== Submission of a patch ===
If you want to contribute a patch to !BigBlueButton, your chances of acceptance are *greatly* improved the following are true:

  # You are an active participant in [http://groups.google.com/group/bigbluebutton-dev/topics?gvc=2 bigbluebutton-dev] and have demonstrated an understanding of the product by helping others and participating in discussions on other patches
  # Your patch fixes an [http://code.google.com/p/bigbluebutton/wiki/IssuesInstructions?tm=3 open issue]. 
  # Before submitting your patch, you have announced your intent to bigbluebutton-dev and invited discussion from others
  # You have received positive feedback from a committer on your intent

The ideal patch submission has all the above true, which essentially means you have built a relationship of trust with other !BigBlueButton developers and have been visible on your willingness to contribute your skills to the project.  

There are a number of *must haves* for your submission to be accepted.

  # You have forked !BigBlueButton on !GitHub and submitted the patch as a pull request (this makes it *much* easier for a committer to review and incorporate your patch)
  # You have signed a [http://code.google.com/p/bigbluebutton/wiki/FAQ#How_do_I_contribute_my_updates_to_BigBlueButton_? committers agreement] so there is no ambiguity that your contributions may be released under an open source license.
  # Your submission is LGPL (unless it modifies existing code that is under a different license).

Specifically, for using GitHub, you need to do the following:

  1. [http://help.github.com/fork-a-repo/ Fork] !BigBlueButton on [http://www.github.com/bigbluebutton GitHub]
  1. Create a topic branch - {{{git checkout -b my_branch}}}
  1. Push to your branch - {{{git push origin my_branch}}}
  1. Create a [http://help.github.com/pull-requests/ Pull Request] from your branch

GitHub provides some good [http://help.github.com/ help] in the above steps, and there is an excellent [http//progit.org/ Pro Git] book by Scott Chacon available on-line.

=== Submission of a feature ===
Some of the items in our issue tracker are enhancements to the core product.  If you are interested in contributing an enhancement, your chances of acceptance are *greatly* improved the following are true:

  # You have had patches accepted by a committer
  # You have posted a Request for Comments to the bigbluebuton-dev mailing list signaling your willingness to work on the enhancement.  In your post you have provide (at minimum) 
    * An overview of the design and implementation of your feature.  For examples see: [http://groups.google.com/group/bigbluebutton-dev/browse_thread/thread/d36ba6ff53e4aa79/91de48842ae1ea75?lnk=gst&q=rfc#91de48842ae1ea75 RFC for Preupload of Documents]
    * An outline of how you intend to test the enhancement
    * An estimate of how much time you have to work on the enhancement
  # A committer has signaled their intent to work closely with you on the enhancement

Like other open source projects, the participation of a committer is central to the above process as they will take the responsibility for reviewing and signing off on your contribution. 


=== Testing your submission === 
Depending on the complexity of your patch or feature, it should be accompanied by tests cases or, at minimum, a series of steps to test the code is functioning properly.  

We are continuously trying to incorporate more automated testing into !BigBlueButton development process, such as using [http://testng.org/doc/index.html TestNG]. 

We know that the most important part of any submission is the ability for others to test that it works correctly.   Any documentation, sample code, or unit tests that you can provide will greatly reduce the effort of the committer to review your submission.


=== Coding conventions  ===
Take a look at the existing code in !BigBlueButton and follow it as an examples of the project's coding and documentation conventions.

For code written in Java, we will follow the [http://www.oracle.com/technetwork/java/codeconvtoc-136057.html Java Coding Convention] with minor changes. We will be documenting those changes in this wiki.

For documentation of code method -- especially those classes that provides an API to other classes -- should be documented  using the [http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html JavaDoc] format. This way we as part of running !Hudson CI, we will generate the docs.

For !Flex/!ActionScript code, follow the [http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_1.html AsDoc] format.

= Installation =

== What are the minimum hardware requirements to run !BigBlueButton? ==
As a minimum, we recommend you run !BigBlueButton on a dual-core machine with at least 2 GB of memory and a 2.0+ Ghz processor.  You'll need good upstream and downstream bandwidth from the server.  We recommend installing Ubuntu 10.04 32-bit/64-bit on the server (see [InstallationUbuntu Installing BigBlueButton]).

While the [BigBlueButtonVM BigBlueButton VM] is a good way to try out the system, we recommend you run !BigBlueButton on a dedicated server to reduce audio lag.  In a virtual environment, the !BigBlueButton VM gets only a portion of the host's CPU, and any lag in the CPU cycles can translate to lag in processing VoIP packets.

== Can I install !BigBlueButton on a shared hosting server, such as !GoDaddy? ==
You need root access to install !BigBluebutton.

If you have a hosting account that only gives you, for example, FTP access and a cPanel interface, you will not be able to install !BigBlueButton.  

There are a number of OpenSourceComponents in !BigBlueButton that need root access for installation.  These include Asterisk and nginx. The former provides to voice conferencing, while the later provides the proxy server for enabling clients to use !BigBlueButton behind a firewall.  

== Can I install !BigBlueButton on EC2? ==

Yes.  Canonical provides official Ubuntu EC2 images for Ubuntu 10.04 32-bit and 64-bit.  To install !BigBlueButton on EC2, do the following 

  # Modify the default security group (or create a new security group) that opens the needed ports for !BigBlueButton (see [FAQ#What_ports_must_be_open_for_external_users_to_connect_to_BigBlue FAQ]).
  # Launch a "lucid" image from Canonical's [http://cloud.ubuntu.com/ami/ list of supported AMI].
  # Follow the instructions to InstallationUbuntu.
  # Adjust the FreeSWITCH configuration (see [FAQ#When_I_click_on_the_headset_icon,_nothing_happens? FAQ]) to work on an internal IP address.
  # Use `sudo bbb-conf --setip hostname` to instruct !BigBlueButton to listen to the external DNS name for the EC2 instance (see [http://code.google.com/p/bigbluebutton/wiki/BBBConf bbb-conf])

You'll need (at a minimum) a m1.small.  We recommend running !BigBlueButton on a c1.medium.

 
== OS Requirements ==


=== Ubuntu ===
As of !BigBlueButton 0.71, you can install !BigBluebutton on *Ubuntu 10.04 32-bit* or *Ubuntu 10.04 64-bit*. See [InstallationUbuntu Ubuntu packages] using apt-get and Ubuntu packages.  

Please note, that the packages have not been tested on Ubuntu 9.04, Ubuntu 9.10, or Ubuntu 10.10; however, there are [InstallingBigBlueButton step-by-step instructions] for installing !BigBlueButton that you can adapt to these platforms.

If at all possible, install on Ubuntu 10.04.  With a good internet connection, you'll have a full !BigBlueButton server running in about 15 minutes.


=== CentOS ===
For !BigBlueButton 0.64, we had created [RPMPackaging RPM Packages] for CentOS 5.4, but, at the moment, they are now very much out of date.  We had also provided [InstallingBigBlueButtonCentOS step-by-step instructions] for installing on CentOS, but these too are out of date.  We have no date for updating these packages and instructions.

Any further updates are tracked in the following issue: [http://code.google.com/p/bigbluebutton/issues/detail?id=624 624].

Why?  In a nutshell: quality.  We found it very difficult to test and maintain packaging for both RPM based systems (primarily CentOS) and Ubuntu.  Rather than try to do both and have them "kind of" work, which leads to many many posts in our forums for support, we've invested heavily in testing and maintaining the Ubuntu packages.  They are now very solid and tested.

If at all possible, we recommend you setup a Ubuntu 10.04 server to try out !BigBlueButton.  If you *really* want support for CentOS, you can contact one of the companies listed at http://bigbluebutton.org/support for commercial support.  Any financial contribution you make to updating CentOS packages will directly benefit other CentOS users in the community.


=== Windows === 
While technically it should be possible to manually install each of the individual OpenSourceComponents needed to run !BigBlueButton on Windows, we haven't tried it, nor have we tested it.

Don't worry -- using [http://www.vmware.com/products/player/ VMWare Player] you can have a full !BigBlueButton server running in under an hour using the [BigBlueButtonVM BigBlueButton Virtual Machine].  The !BigBlueButton VM is running Ubuntu 10.04 32-bit and has all the components pre-installed. 

If you a brave soul and want to manually install the individual OpenSourceComponents natively on Windows and then install all the !BigBlueButton components, it should be possible.  However, beware, no one who has tried this has lived to post a success message to our mailing list :-).

=== OS X ===
The easiest way to get your own !BigBlueButton server under OS X is to install VMWare Fusion and run the [BigBlueButtonVM BigBlueButton Virtual Machine].  

=== Gentoo ===
There is a !BigBlueButton Labs project (prototype and unsupported) that shows how to [GentooEBuild install BigBlueButton on Gentoo using ebuild].



== Bandwidth Requirements ==


=== What are the bandwidth requirements for running a !BigBlueButton server? ===

When sharing a webcam, as a moderator !BigBlueButton lets you select 320x240 or 640x480. Both use the same amount of bandwidth, roughly 30-50 kbytes/second per stream.  Viewers can only share a 320x240 webcam.

For example, if you have a room with 5 users, each sharing their webcam, then the you can calculate the bandwidth usage as follows: 

  * Y = 30-50 Kbytes/sec; let's assume 40 Kbytes/sec on average 
  * W = amount of webcams that are streaming 
  * U = amount of users that are watching 

For calculations:
  * server incoming bandwidth: W`*`Y 
  * server outgoing bandwidth: W`*`(U-1)`*`Y  (minus one since a broadcaster does not have to subscrive to his own stream) 

For example, with 5 users in a room with 5 webcams streaming, the bandwidth calculation is as follows:

  * in: 5`*`40 = 200 Kbytes/sec incoming bandwidth needed to the server (e.g. 1.6 Mbit) 
  * out: 5`*`(5-1)`*`40 = 800 Kbytes/sec incoming bandwidth needed from the server (e.g. 6.4 Mbit) 
  * Total traffic used after one our: 60 mins`*`60 secs`*`(200 + 800) = 3.6 Gbyte traffic per hour 

If you'd have a typical classroom situation with the presenter broadcasting their webcam to 30 remote students, the calculation is as follows: 

  * in: 1`*`40 = 40 Kbytes/sec incoming (e.g. 0.32 Mbit/sec) 
  * out: 1`*`(30-1)`*`40 = 1160 Kbytes/sec outgoing (e.g. 9.3 Mbit/sec) 
  * Total traffic used after one hour: 60 mins`*`60 secs`*`( 40 + 1160) = 4.3 
Gbyte traffic per hour 

If you'd have 10 of those classes then you server need to be able to output 
93 Mbit/sec; that's not much in a LAN but it's pretty much if your in a hosted environment.

Large "cafe-style chatroom" : 20 viewers, 8 people broadcasting with a 
webcam:  

  * in: 8`*`40 = 320 kbyte/sec ( 2.5 Mbit ) 
  * out: 8`*`(20-1)`*`40 = 6080 kbytes/sec ( 48.6 Mbit ) 
  * Total traffic used after one hour: 60 mins`*`60 secs`*`( 320 + 6080 ) = 23 Gbyte traffic per hour 


Sharing slides take almost no bandwidth beyond the initial uploading/downloading of slides.  When the presenter clicks to show the next slide, the viewers receive a "move next slide" command in their !BigBlueButton client, and they load the next slide from the local cache. Chat also almost no bandwidth as well.

Desktop sharing takes the most bandwidth, and it's dependent on area chosen by the presenter (full screen and region) and how often their screen updates.  

A VoIP connection to the !BigBlueButton takes roughly 20 kB/sec per user.  The bandwidth for VoIP grows linearly with number of users.  For example, if there are 20 students in a classroom, then the bandwidth requirements for the server to support VoIP is 20 `*` 20 KBytes/sec = 400 kBytes/sec.


If the presenter has only 100 KByte/second upstream, then performing VoIP, video, and desktop sharing will fit within that upstream constraint.  In reality, red5/Flash does a good job of using limited bandwidth and it actually works quite well.  In the case of desktop sharing, the remote desktops will still receive updates, but the refresh will be much slower than if the presenter was on a LAN (such as within the university or college network).


== Troubleshooting ==

=== I have an existing server with web application already running on port 80 (such as Moodle).  Can I also install !BigBlueButton on that server? ===

!BigBlueButton can run with other web based systems on the same server, but there are tradeoffs.  If you already have apache running on port 80, you can have !BigBlueButton listen to a different port (see [BBBConf#--setip_<_Host_>_:_<_Port_> bbb-conf]).

However, the trade off are remote users accessing behind a firewall can no longer tunnel through port 80 to !BigBlueButton. 

As a result, we recommend installing !BigBlueButton on it's own dedicated server, making it easy to upgrade !BigBlueButton without affecting your existing applications, and easy to upgrade the server as your usage of !BigBlueButton grows.

There are also some good instructions for setting up a server with !BigBlueButton running on a different port at [http://ubuntuguide.org/wiki/Ultimate_Server_Jaunty#Install_the_BigBlueButton_teleconferencing_system Ultimate Server Jaunty].


=== I've tried to install !BigBlueButton on a virtual private server running Ubuntu 10.04 but I'm getting packaging errors during the installation. ===
Sometimes the hosting provider for a virtual private server (VPS) has removed the default entries from

{{{
   /etc/apt/sources.list
}}}

The easiest way to solve this is replace `sources.list` with the standard entries (show below).


{{{
deb http://security.ubuntu.com/ubuntu lucid-security main restricted
deb http://security.ubuntu.com/ubuntu lucid-security multiverse
deb http://security.ubuntu.com/ubuntu lucid-security universe
deb http://us.archive.ubuntu.com/ubuntu/ lucid main restricted
deb http://us.archive.ubuntu.com/ubuntu/ lucid multiverse
deb http://us.archive.ubuntu.com/ubuntu/ lucid universe
deb http://us.archive.ubuntu.com/ubuntu/ lucid-updates main restricted
deb http://us.archive.ubuntu.com/ubuntu/ lucid-updates multiverse
deb http://us.archive.ubuntu.com/ubuntu/ lucid-updates universe
deb-src http://security.ubuntu.com/ubuntu lucid-security main restricted
deb-src http://security.ubuntu.com/ubuntu lucid-security multiverse
deb-src http://security.ubuntu.com/ubuntu lucid-security universe
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid main restricted
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid universe
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid-updates main restricted
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid-updates multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ lucid-updates universe
}}}

Then, issue a `sudo apt-get update` and try following the install instructions again.


=== I've installed !BigBlueButton using the VM, but I can't access it from a browser ===
Make sure your VMWave Player (or VMWare Fusion) network settings are set to *bridged*, not NAT.  If they were set to NAT and you changed to bridged, you'll need to tell the VM to acquire a network address.  Enter the following command

{{{
  sudo /etc/init.d/networking restart
}}}

Once you acquire an IP address, you need to change the !BigBlueButton configuration files to use this new IP address.  Don' worry, it's easy to do.   If your new IP address is 47.135.32.64, for example, enter the command

{{{
   sudo bbb-conf --setip 47.135.32.64
}}}



= Configuration =
== How do I forward calls from my Asterisk server to FreeSWITCH in !BigBlueButton? ==

Let's assume the following:

{{{
asterisk server ip:          192.168.1.100
bigbluebutton/freeswitch ip: 192.168.1.200
}}}

* Changes to your Asterisk server *

Setup your gateway to !BigBlueButton/FreeSWITCH. in {{{/etc/asterisk/sip.conf}}} add
{{{
[fs-gw]
type=peer
username=fs-gw
insecure=very
contactpermit=192.168.1.200/255.255.255.255
qualify=no
nat=yes
host=192.168.1.200
canreinvite=no
disallow=all
allow=ulaw

}}}

Route the calls to the gateway. In {{{/etc/asterisk/extensions.conf}}} context where your calls are being handled, forward the calls to the gateway. Here, when someone dials 85001, the call is sent to the {{{fs-gw}}} defined above.
{{{
exten => 85001,1,Dial(SIP/fs-gw/${EXTEN})
exten => 85001,2,Hangup
}}}

* Changes to your !BigBlueButton/FreeSWITCH server *

In !BigBlueButton/FreeSWITCH, make the following changes:

Lock down so that only Asterisk can forward calls to FreeSWITCH. In {{{/opt/freeswitch/conf/autoload_configs/acl.conf.xml}}}, add the following ACL. We also need to allow !BigBlueButton to call into FreeSWITCH, that's why we add the IP of !BigBlueButton/FreeSWITCH into the ACL.

{{{
    <list name="asterisk-gw" default="deny">
       <node type="allow" cidr="192.168.1.200/32"/>
       <node type="allow" cidr="192.168.1.100/32"/>
    </list>
}}}

Then we apply the ACL into the profile that receives the calls from external gateways. In {{{/opt/freeswitch/conf/sip_profiles/external.xml}}}, add the ACL under {{{<settings>}}}
{{{
  <settings>
    <!-- Apply ACL from asterisk-gw -->
    <param name="apply-inbound-acl" value="asterisk-gw"/>
}}}

To debug, try connecting to FS CLI and increase logging level. Once connected, make your call and see what the logs say.
{{{
  cd /opt/freeswitch/bin
  ./fs_cli

  Once connected:
  help -- shows the available commands
  console loglevel <level> -- change log level

  Ctrl-D to exit
}}}

== How do I enable feature X in the !BigBlueButton client ==
As of !BigBlueButton 0.71, you can configure some options in the client, such as enabling moderators to eject users from the virtual classroom.

Check out [ClientConfiguration client configuration] for details on how to enable or disable specific modules and features.  These options are on a server-wide basis (not virtual classroom or individual basis).

== Networking ==

=== How do I change the port or hostname of my !BigBlueButton server? ===

If you change the port or hostname of your !BigBlueButton server, you can easily change all the related !BigBlueButton configuration files using the [http://code.google.com/p/bigbluebutton/wiki/BBBConf bbb-conf tool ].

=== What ports must be open for external users to connect to !BigBluebutton? ===

These ports are 80 (HTTP), 9123 (Desktop Sharing), and 1935 (RTMP).  These ports are all TCP ports.

=== Does !BigBlueButon support tunneling? ===

Yes.  If a remote user is unable to connect to port 1935, which typically occurs when a remote user's corporate firewall blocks external access to all other ports except port 80, then their !BigBlueButton client will fail to connect to port 1935 and, after about ten seconds, fall back to tunneling through port 80.

=== Can I provide external access to a !BigBlueButton server behind my firewall? ===

Yes.  A typical scenario is you have !BigBlueButton running on an internal computer behind a firewall.  You have defined an external hostname, such as `external.host.org`, that will resolve to the IP address of your firewall. You want external users to access !BigBlueButton using that hostname.

First, on your firewall, you need to forward three ports to the the internal IP address of the !BigBlueButton server.  These ports are 80 (HTTP), 9123 (Desktop Sharing), and 1935 (RTMP).

Here is an example of forwarded ports on the D-Link DIR-665 router (the internal IP address of the !BigBlueButton server in this example  is 192.168.10.198):

[http://bigbluebutton.googlecode.com/svn/trunk/bbb-images/ports_example.jpg]

Next, when the firewall forwards incoming requests to the internal !BigBlueButton server at 192.168.10.198, the !BigBlueButton must be listening for these requests.  The HTTP headers will identify them as for the server `external.host.org`, so you must tell !BigBlueButton to listen for incoming requests for that hostname (not the internal IP address).  Use the following command to change the !BigBlueButton configuration files to detect incoming requests to `external.host.org`.

{{{
sudo bbb-conf --setip external.host.org
}}}

Internally, !BigBlueButton must be able to call `external.host.org` to make API requests.  In this example, if the internal !BigBlueButton server is at 192.168.10.198, add the following line to /etc/hosts.

{{{
192.168.10.198 external.host.org
}}}

To verify that the !BigBlueButton can access `external.host.org`, enter the following command

{{{
wget -O - --quiet http://external.host.org/bigbluebutton/api 
}}}

This should resolve to:

{{{
<response><returncode>SUCCESS</returncode><version>0.7</version></response> 
}}}

Next, to verify that external users can access the !BigBlueButton server, try to telnet port 80.

{{{
telnet external.host.org 80
Connected to external.host.org.
Escape character is '^]'.
}}}

and port 1935 

{{{
telnet external.host.org 1935
Connected to external.host.org.
Escape character is '^]'.
}}}

and port 9123

{{{
telnet external.host.org 9123
Connected to external.host.org.
Escape character is '^]'.
}}}

If you can connect to the service running on all three ports (nginx, red5, and deskshare), then your external users should be able to connect to !BigBlueButton.

== Classrooms ==

=== I tried the application at /bigbluebutton and it does not work? ===

The grails applications at /bigbluebutton is old code and is now depreciated (it should not longer be accessible as of 0.71).  To control !BigBlueButton, we recommend using the [API API].  

We provide a number of [http://demo.bigbluebutton.org/bigbluebutton/demo/demo1.jsp API] demo with !BigBlueButton's install.  To modify one of these demos to create you own classrooms, see [#Can_I_run_multiple_virtual_classrooms_in_a_single_BigBlueButton How to create your own virtual classrooms].

Also, most people integrate !BigBlueButton with an existing system using one of the existing [http://bigbluebutton.org/support integration modules]. 


=== How do I modify the default landing page? ===

The default HTML landing page is located in

{{{
   /var/www/bigbluebutton-default/index.html
}}}

Change this page to create your own landing page.


=== Can I run multiple virtual classrooms in a single !BigBlueButton server ===
Absolutely.  To see an example of this, check out the [http://demo.bigbluebutton.org/bigbluebutton/demo/demo3.jsp Join Courses] API example.  You can modify this demo page to setup your own branded landing page.

=== How do I setup new classrooms in !BigBlueButton? === 
If you are using Sakai, Moodle, Drupal, or other content management systems, see the list of [http://bigbluebutton.org/support integration modules].  If you are not a developer, it going to be far easier to use one of these modules to setup your own virtual classrooms.

If you have a bit of programming skills, you create your own virtual classrooms by modifying this [http://demo.bigbluebutton.org/bigbluebutton/demo/demo3.jsp Demo Page] on a !BigBlueButton server.

You will find `demo3.jsp` in the directory `/var/lib/tomcat6/webapps/bigbluebutton/demo/demo3.jsp`.

You can edit the following section
{{{
meeting = new HashMap<String, String>();
allMeetings.put( "ENGL-2013: Research Methods in English", meeting );	// The title that will appear in the drop-down menu
	meeting.put("welcomeMsg", 	welcome);			// The welcome mesage
	meeting.put("moderatorPW", 	"prof123");			// The password for moderator
	meeting.put("viewerPW", 	"student123");			// The password for viewer
	meeting.put("voiceBridge", 	"82013");			// The extension number for the voice bridge (use if connected to phone system)
	meeting.put("logoutURL", 	"/bigbluebutton/demo/demo3.jsp");  // The logout URL (use if you want to return to your pages)

}}}


If you are looking for an integration module that does not exist, please post a request to 
[http://groups.google.com/group/bigbluebutton-dev/topics?gvc=2 bigbluebutton-dev].


=== How do I integrate !BigBlueButton with my own server? === 

!BigBlueButton provides an [http://code.google.com/p/bigbluebutton/wiki/API API] for integration with other web-based applications.  

The best approach is to see how others have integrated and adapt their code to your integration.  Don't you just love open source!


== How many simultaneous users can a !BigBlueButton server support? == 

As a rule of the thumb, we recommend you use !BigBlueButton for on-line classes of twenty-five (25) users or less.  You can run multiple on-line classes on a !BigBlueButton server.

We don't give out recommendations for the maximum number users a !BigBlueButton server can support, as it's so dependent on the bandwidth usage, server capacity, and user activity. 

Members of our community periodically host stress tests for !BigBlueButton, which gives others a data point on what a particular server was able to handle.

Take any stress test with a grain of salt.  There are many variables at play:

  * Server: CPU memory, disks space, and bandwidth
  * Usage scenarios (# of webcams and use of desktop sharing)
  * Upstream bandwidth from clients
  * Configuration of !BigBlueButton
  * Version of !BigBlueButton

For the upcoming !BigBlueButton 0.8, [http://groups.google.com/group/bigbluebutton-dev/browse_thread/thread/3c7ce9815a9800c3# here were the results] from a stress test of an internal build of 0.8.  In !BigBlueButton 0.8, users will experience higher quality audio with lower latency with speex, but the CPU needs to work harder to transcode the audio.  See [http://groups.google.com/group/bigbluebutton-dev/browse_thread/thread/a36d61df9b9fc45b# this post].  

Again, we recommend you stress test own server with a group of users to get real-world data.  As a general rule of the thumb, if you compare the capacity (number of simultaneous users) between two servers, the server with a faster CPU will have a higher capacity.

To test your own server, have ten people login and successively open multiple browser tabs, each one logging into !BigBlueButton and joining the audio conference.  With 10 friends, you can simulate 10, 20, 30, etc. users.  We provide [http://code.google.com/p/bigbluebutton/wiki/StressTesting some scripts] to help you launch browsers.

To monitor bandwidth, there are a number of [http://www.ubuntugeek.com/bandwidth-monitoring-tools-for-ubuntu-users.html tools] for Ubuntu. 

== Where is the security salt located? ==

You'll find the security salt in the file 

{{{
   /var/lib/tomcat6/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties
}}}

Look for the line

{{{
   beans.dynamicConferenceService.securitySalt=<value_of_salt>
}}}

This is the security salt used for enabling 3rd party plug-ins and external applications to access your !BigBlueButton server through it's API.  

== How do I change the security salt? ==

To change the security salt, do the following: 
  # Generate a new Universal Unique ID (UUID) from a UUID generator such as at [http://www.somacon.com/p113.php http://www.somacon.com/p113.php]. This will give a long string of random numbers that will be impossible to reverse engineer.  
  # Run the command `sudo bbb-conf --setsalt new_salt`. 

Note: If you are using a [http://bigbluebutton.org/support third-party plug-in] to connect to !BigBlueButton, be sure to use the plug-in's administrative interface to specify the new value for the salt; otherwise, if the salts do not match, the API calls from the third-party plug-in will fail.


== How do I change the maximum allowed size for uploading a presentation? ==
Right now the maximum size is 30mb. To change it, edit the file:
{{{
  /etc/nginx/sites-available/bigbluebutton 
}}}
right here 
{{{
       location /bigbluebutton { 
           proxy_pass         http://127.0.0.1:8080; 
           proxy_redirect     default; 
           proxy_set_header   X-Forwarded-For 
$proxy_add_x_forwarded_for; 

        # Allow 30M uploaded presentation document. 
           client_max_body_size       30m; 
}}}

== How do I change the video quality of the shared webcams? ==
In !BigBlueButton 0.71 and later, you can change the video quality through the client's config.xml file, by default located in /var/www/bigbluebutton/client/conf. Scroll down to the entry named !VideoconfModule. The value of the videoQuality attribute can be anywhere from 0 to 100. 0 means priority is given to the bandwidth and if bandwidth is low quality will suffer. Quality of 100 means no video compression will be done at all, and you will get maximum quality at the expense of bandwidth. If the bandwidth is low, the frame rate will suffer.

For more information see ClientConfiguration.

= Administration =

== How do I update !BigBlueButton to the newest version? ==
If you are running a !BigBlueButton VM 0.70 VM or had installed !BigBlueButton 0.70 using Ubuntu packages on Ubuntu 10.04, you can upgrade to the newest stable release with two commands

{{{
  sudo apt-get update
  sudo apt-get dist-upgrade
}}}

If you would like to update instead to the latest version currently under development, you can do that too, but note that the development version of !BigBlueButton is often unstable, and nobody guarantees that it will work correctly. Here's how to do it:

Log into your VM, then edit `/etc/apt/sources.list.d/bigbluebutton.list` and change

{{{
#
# Repository for BigBlueButton
#
deb http://ubuntu.bigbluebutton.org/lucid/ bigbluebutton-lucid main
}}}

to
{{{
#
# Repository for BigBlueButton
#
deb http://ubuntu.bigbluebutton.org/lucid_dev/ bigbluebutton-lucid main
}}}

Do an `apt-get update/apt-get dist-upgrade` and you'll be running the latest builds.

== VM won't resolve packages when updating, or is not connected to the internet ==
If you're using VM player, please go to VM>Settings>Network Adapter and make sure it is set to Bridged, with the box underneath left unchecked. 
Also restart the networking on the VM by running the following command:
{{{
  sudo /etc/init.d/networking restart
}}}





= Using !BigBlueButton =
== Desktop Sharing ==
=== What is needed to run desktop sharing? ===
!BigBlueButton uses a Java applet to capture screen updates.   This means desktop sharing works for Mac, Unix, and PC platforms.  

Only the presenter need have Java installed to share their desktop.  You can test if your system has Java installed using the following [http://java.com/en/download/help/testvm.xml link].  To download Java for your computer, visit the [http://www.java.com/en/download/index.jsp Java download page.]

There are no additional requirements (beyond having Flash installed) for viewers to run !BigBlueButton and view the presenter's desktop.  
  
=== How can I make desktop sharing faster? ===

First, a bit of background: to share your screen, !BigBlueButton runs a Java applet (Flash can't see your screen).  The applet takes a few screen shots each second, then divides up each captured screen shot into a checkboard, and figures out which checkerboard tile is different than the previous screen shot.  Those different tiles are then compressed and sent to the !BigBlueButton server for broadcast to viewers.

The compression algorithm is lossless, which means remote viewers see a pixel-for-pixel view of the presenter's destkop.  However, if the presenter's screen size is above 1280 x 1024, the applet will scale the screen shot to fit within 1280 x 1024 dimension are before dividing it into a checkerboard.  This reduces the overall data sent to the server.

The benefit of the above approach is unlike most commercial web conferencing systems that download a binary file (i.e. DLL) on your windows machine (and then not provide any support for Mac or Unix), !BigBlueButton's desktop sharing runs on Mac, Unix, and PC computers.  However, the applet approach is going to be slower than a native application as the applet can only look at the screen (it doesn't have any concept of what the operating system is actually drawing).  And the algorithm is simple: if a tile has changed, send it to the server.  

If the tile is mostly a solid color, it compresses very well and gets quickly sent.  If the tile is over a 32-bit image, it will be larger and will take longer to send to the server.

To help reduce the amount of data being sent to the server (and thus increase the refresh rates for desktop sharing), we recommend the following:
 
   # Share a region of your desktop (this is a good approach if you want to share only a specific window)
   # Replace any 32-bit desktop background image with a solid color (this greatly increases the refresh rates when the desktop becomes visible)
   # Lower your screen dept from 32-bit to 16-bit

Another factor in the refresh rate is presenter's upstream bandwidth.  In some countries, the bandwidth is asymmetrical.  Desktop sharing will attempt to push as many tiles as quickly as possible to the remote !BigBlueButton server, so having good upstream bandwidth will help increase the refresh rate for remote viewers.

=== Can I share a specific window when sharing my desktop ===

Yes.  As of !BigBlueButton 0.71, you can share a region of your desktop.  Just select the region of you window and, to your viewers, they will just see that window.


=== As a presenter the preview window is too small and I can't resize it ===

As the presenter, when you share your desktop, !BigBlueButton will show you a *thumbnail* view of what users are seeing for your desktop.  As a thumbnail view, this is not re-sizable.  

Your viewers have a resizable window showing your desktop.  You can see how this works by watching this [http://bigbluebutton.org/sites/all/videos/join/index.html video overview] at 2:47.


== Presentations ==
=== Can I uploaded Microsoft Office 2007 documents to !BigBlueButton ? ===

!BigBlueButton uses !OpenOffice 3.2 for converting Microsoft Office documents into PDF for display in !BigBlueButton.  Office 2003 documents convert well; however, Office 2007 documents (such as .pptx) are problematic with !OpenOffice 3.2.  

We recommend Office 2007 uses use Microsoft's free download to enable an Office 2007 user to save any document to PDF: [http://www.microsoft.com/downloads/details.aspx?FamilyID=4d951911-3e7e-4ae6-b059-a2e79ed87041&displaylang=en download link].

You'll always get the best results with PDF.

=== I uploaded a document but some fonts are missing after conversion ===

If you upload a PDF document, all your fonts will come through with the document.

However, if you upload a Word or Power Point document that has special fonts, such as Chinese language, the document must first be converted by !OpenOffice into PDF.  Unless you've configured the !OpenOffice server running within !BigBlueButton to have the necessary fonts, the you will see empty spaces (or boxes) for the missing fonts.

For best results, always create a PDF and upload it for conversion.

=== I can't upload a presentation from Linux ===
We've noticed that on some UNIX systems, such as Linux (openSUSE 11.2 x64), when you click the 'upload presentation' button (lower left-hand of Presentation window), Flash will not let you upload a presentation.

If you encounter this problem, try the following

  # Click 'upload presentation'
  # Close the File Open dialog box
  # Click the (+) button next to the file name for the presentation (the File Open dialog box reappears).
  # Select a file to upload in the File Open dialog box
  # Click 'Open'
  # Click 'Upload'
  
These steps trigger the opening of the File Open by a user action, which seems to work better than the automatic display of the File Open dialog box when there is currently no presentation loaded.
  
=== Can I increase the 100 page limit for uploads? ===

!BigBlueButton, by default, restricts uploads to 100 pages.  To increase this value, open `/var/lib/tomcat6/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties` and change the `maxNumPages` value:

{{{
#----------------------------------------------------
# Maximum number of pages allowed for an uploaded presentation (default 100).
maxNumPages=100
}}}

After you save the changes to `bigbluebutton.properties`, restart the !BigBlueButton server with

{{{
sudo bbb-conf --restart
}}}
 
== Video ==

=== I'm on Ubuntu and I can't share my webcam ===
See Ubuntu's documentation for [https://help.ubuntu.com/community/Webcam/Troubleshooting Webcam Troubleshooting].

  
== Voice Conference ==

=== How can't others hear me in the voice conference? ===

If others in the voice conference don't hear you when you speak, it's likely that Flash has picked the wrong microphone on your computer.  You can change this with the following steps:

  # Right-click within the !BigBlueButton client
  # Choose "Settings..." from the flash pop-up menu
  # Click the microphone icon
  # Try choosing a different microphone from the drop-down list

You see a volume indicator next to the drop down for choosing a microphone.  Try selecting a different microphone.  When you select the active microphone, you'll immediately see activity in the volume indicator when you speak.

Close this Flash settings dialog and others in the voice conference should now hear you.


=== Why do others only hear part of my audio? ===

FreeSWITCH has automatic audio clipping, which means it will not transmit a speaker's audio if the volume is too low.   If the speaker's audio is low, FreeSWITCH might take a moment to recognize that someone is speaking before transmitting, causing others to hear your audio only after you have started speaking a few words.


Try placing the microphone closer to your mouth.  Also, try increasing the sensitivity of your microphone (see [FAQ#How_can't_others_hear_me_in_the_voice_conference? why can't others hear me when I join the voice conference]).

You can also change the settings on FreeSWITCH to lower default threshold for audio.   To lower the threshold, switch to the root account, then edit

{{{
 /opt/freeswitch/conf/autoload_configs/conference.conf.xml

}}}

and set energy-level to a lower value (.e.g 50)

{{{
   <profile name="wideband">
     <param name="energy-level" value="300"/>
}}}

Save the file, then do `sudo bbb-conf --restart` to restart !BigBlueButton.

=== Why do I hear music when I join the voice conference? ===

When you are the only person in the voice conference, you'll hear 'music on hold'.  This indicates that you've successfully joined (as opposed to hearing nothing).  Once a second listener joins, the music stops and you can talk with the other person.


=== How do I disable the music on hold? ===

If you want to disable this sound, for :

!AppKonference, remove the `H` parameter in 

{{{
   /etc/asterisk/bbb_extensions.conf
}}}

see [http://github.com/jthomerson/AsteriskAudioKonf/blob/master/konference/Dialplan.txt Asterisk dialplan].  MeetMe, remove `M` parameter in 

{{{
   /etc/asterisk/bbb_extensions.conf

}}}

For more information see [http://www.voip-info.org/wiki/view/Asterisk+cmd+MeetMe Asterisk Commands].  For FreeSWITCH, remove `moh-sound` entry in the wideband profile in 

{{{
   //opt/freeswitch/conf/autoload_configs/conference.conf.xml
}}}

For more information, see [http://wiki.freeswitch.org/wiki/Mod_conference Mod_conference] and [http://github.com/bigbluebutton/bigbluebutton/blob/master/bbb-voice-conference/config/freeswitch/conf/autoload_configs/conference.conf.xml BigBlueButton conference.xml].

=== Why is there an echo in the voice conference? ===

You'll hear an echo when a user in the voice conference has joined over VoIP (by clicking the headset icon) is not using a headset.  

This usually occurs when a remote user is using a laptop.  They have activated the VoIP, and their audio is coming out through the laptop's built-in speakers and is immediately picked up by the built-in microphone and retransmitted to everyone else, causing an echo. 

To solve this problem, if you are logged in as a moderator, you can mute the user by clicking on the speaker icon to the left of their name. 

If they want to speak, they can click the raise hand button to get your attention or type in the chat window.

The best solution is ask all users to use a headset -- this will ensure no feedback.

=== Why is there a delay in the audio when I use VoIP? ===

You will experience a 2-4 second delay in the audio when using the built-in VoIP in !BigBlueButton (clicking the headset icon).

The delay is largely due to the internal Java-based transcoding of audio packets with !BigBlueButton itself, and partly due to the restriction that Flash sockets are TCP/IP based, not UDP.

Here's a breakdown of the path for the audio packets from your !BigBlueButton client when using VoIP.  When you speak, your audio is transmitted by the !BigBlueButton client to red5 using nellymoser codec.  It is then transcoded by red5phone (nellymoser -> mulaw), then sent to asterisk/FreeSWITCH (via SIP), then asterisk/FreeSWITCH mixes in the audio, then the resulting audio stream is sent back to red5phone (via SIP), then is transcoded again (mulaw -> nellymoser), then goes down to the client.

Lots of audio processing, and that what is introducing the delay.  We're investigating a number of ways to reducing the transcoding.

  # Use speex instead of nellymoser (requires more CPU to encode/decode audio packets)
  # Move the transcoding of nellymoser -> mulaw/mulaw -> nellymoser out of Java into native code
  # Launch an external Java-based SIP client to connect directly with asterisk/FreeSWITCH (bypassing red5 completely)
  # Implement a push-to-talk mode for one-to-many sessions (i.e. a remote class)

Another option is to setup asterisk/FreeSWITCH to use a direct inward dialing (DID) number, which you can get from a SIP trunk provider, a third-party company that essentially maps a DID to an IP address on internet, converts your voice to a digital format (such as µlaw), and authenticates and connects to asterisk/FreeSWITCH server when someone calls the DID using session initiation protocol (SIP).  You can see an example of this by joining http://demo.bigbluebutton.org/ and dial the phone number + extension listed in the chat window.

Setting up DIDs involves configuration of Asterisk/FreeSWITCH. If you've never done this before, be prepared to read some documentation. It's not going to be a one or two hour job.  If you want help in setup DIDs, contact one of the [http://bigbluebutton.org/support companies offering !BigBlueButton support] or a [http://www.digium.com/en/products/carrier-interop.php SIP Trunk provider].

Setting up DIDs will give your users the option to dial in directly through the phone (or Skype out to the DID), and use the phone system, which is very good at doing voice.  You'll then reduce the network latency down to the connection between your SIP trunk provider and your Asterisk/FreeSWITCHserver.  The trade off is that it will cost money to provide SIP trunking to your Asterisk/FreeSWITCH server.

Update (June 2, 2011): We've made progress in reducing the audio delay in the upcoming !BigBlueButton 0.8. See this [http://groups.google.com/group/bigbluebutton-dev/browse_thread/thread/a36d61df9b9fc45b# thread] in bigbluebutton-dev group.

=== Why is the audio not synced with the video? ===

Currently, the audio and video in !BigBlueButton go through two separate different systems: the audio goes through Asterisk/FreeSWITCH, while the video goes through red5.  

For the video, red5 does not do much with the video packets -- it just re-broadcasts them to all the clients current subscribed to the video stream.  It's basically a straight pass through of the packets.

For audio, the voice packets have a longer route to take (see answer to question above).


=== How do I remove sound when a user join or leave the conference? ===
For FreeSWITCH, comment out {{{the following in /opt/freeswitch/conf/autoload_configs/conference.conf.xml}}}
{{{
      <!--param name="enter-sound" value="tone_stream://%(200,0,500,600,700)"/-->
      <!--param name="exit-sound" value="tone_stream://%(500,0,300,200,100,50,25)"/-->
}}}

For Asterisk MeetMe, add {{{q}}} to the parameter list

see http://www.voip-info.org/wiki/view/Asterisk+cmd+MeetMe

=== I'd like to connect my !BigBlueButton server to PSTN. Where can I det DIDs?===
You can try to find them here http://www.voip-info.org/wiki/view/DID+Service+Providers

=== Why did my voice conference number work in 0.7 but not in 0.71? ===
In !BigBlueButton 0.7, Asterisk was configured to use any 5-digit conference number. However, for !BigBlueButton 0.71, FreeSWITCH is configured to use any 5-digit number that begins with 7 (i.e. 7XXXX). 

To configure FreeSWITCH to accept any 5-digit conference number, in /opt/freeswitch/conf/dialplan/public.xml change

{{{
    <extension name="bbb_conferences">
      <condition field="destination_number" expression="^(7\d{4})$">
          <action application="answer"/>
          <action application="conference" data="$1@wideband"/>
          <!-- <action application="conference" data="$1@wideband"/> -->
      </condition>
    </extension>

}}}

to

{{{
    <extension name="bbb_conferences">
      <condition field="destination_number" expression="^(\d{5})$">
          <action application="answer"/>
          <action application="conference" data="$1@wideband"/>
          <!-- <action application="conference" data="$1@wideband"/> -->
      </condition>
    </extension>
}}}

and then restart FreeSWITCH.  

{{{

sudo /etc/init.d/freeswitch restart

}}}

== Chat ==

=== How can I copy all chat messages to the clipboard? ===

Right-click within the chat area and choose the option "Copy All Text".

=== When I make !BigBlueButton full screen I can't enter any text into chat ===

By design, Adobe disables keyboard input of Flash applications when they go full-screen.  

This prevents the scenario where a malicious Flash application tries to 
masquerade as your desktop showing a web browser, for example, with a login 
screen to your bank account.  

As of !BigBlueButton 0.71, we've removed the full screen button and instead recommend users make their browser full screen. This has the same effect, but allows you to use your keyboard.

=== How come when I use a | (pipe character) in the chat any text after it disappears? ===

This has to do with how some data is used internally.  The data after the | is stripped away and therefore will not show.

= Developing for !BigBlueButton =

== Setup ==

=== Setting up the Dev environment ===
See [DevelopingBBB Developing !BigBlueButton] for full instructions.

=== Where can I download the latest build? ===
You can checkout the latest code from Git.  However, if you want to install the latest build from packages, see [The_Client using git to checkout from master].

=== I want to develop from Windows! ===

Even though the !BigBlueButton VM makes your life much easier, some people prefer to develop in their Windows environment instead. Once you have the development environment setup, you can mount the VM drive to Windows. When you launch Eclipse of Flex Builder simply create your workspace on the VM drive. This way you'll be developing in Windows with the source on the VM. Once you're ready to deploy, switch to the VM console and deploy using ant. We've found this is the easiest way to develop for !BigBlueButton.

=== How to compile and deploy the components of !BigBlueButton? ===
For most components of BBB, the source on the !BigBlueButton VM includes ant scripts which you can use to compile and deploy that particular component. See DevelopingBBB.

=== What if I want to develop for the Client only? ===
If you are just working on the client side, you need to edit the file config.xml (located in the src/conf folder) to point to a running instance of !BigBlueButton. Change all the IP addresses in the file to the IP of your BBB server or BBB VM. In the entry for the Viewers Module, change the attribute host to host="conf/join-mock.xml". This will enable you to launch and test the client directly from the Flex environment, bypassing the Web component of !BigBlueButton.

You need to create the following 2 directories on your bbb server if they're not already there: /var/bigbluebutton/conference-mock-default/room-mock-default and change the owner to tomcat6:tomcat6 (chown -R tomcat6.tomcat6 /var/bigbluebutton/conference-mock-default) 

=== My client fails at startup with RSL error; Error 2035:URL Not Found ===
This is related to localization. Before you launch your client, you need to first separately run the ant localization task. This task is included in your client directory in the build.xml file. It needs to run separately because otherwise java will run out of memory if all tasks are ran together. You can run the localization task from the command line or from Flex if you've set up ant to work with Flex Builder. You can find instructions on how to get Ant working with Flex [http://livedocs.adobe.com/flex/3/html/help.html?content=anttasks_1.html here]

=== Why do I need to use mysql if !BigBlueButton does not store state? ===
!BigBlueButton used to come with a (very) primitive grails-based application for scheduling.  We depreciated it, but we still use grails to implement the API logic, and grails is still looking for a bigbluebutton-dev database.

We have this marked in [http://code.google.com/p/bigbluebutton/issues/detail?id=869 issue 869] to remove the dependency on mysql in a future iteration of !BigBlueButton.


= Troubleshooting =

== General ==

=== I've started a new !BigBlueButton VM but I don't know the password to login via SSH ===
When the VM first asks you to change the password, you will need to enter the password 'default' twice before it lets you change to a new password. Many people miss this. Try logging in with 'firstuser' - 'default' again.

=== I can join the voice conference but nothing appears on the Listener's window? ===
 * Make sure {{{/usr/share/red5/webapps/bigbluebutton/WEB-INF/bigbluebutton.properties}}} values matches those with {{{/etc/asterisk/manager.d/bigbluebutton.conf}}}
 * Make sure {{{enabled = yes}}} in {{{/etc/asterisk/manager.conf}}}
 * See if changing {{{bindaddr = 0.0.0.0}}} to {{{bindaddr = 127.0.0.1}}} works.
{{{
firstuser@bbb-vm-20091109:$ more /etc/asterisk/manager.conf
;
; Asterisk Call Management support
;

; By default asterisk will listen on localhost only.
[general]
enabled = yes
port = 5038
bindaddr = 127.0.0.1
;bindaddr = 0.0.0.0

; No access is allowed by default.
; To set a password, create a file in /etc/asterisk/manager.d
; use creative permission games to allow other serivces to create their own
; files
#include "manager.d/*.conf"

}}}

Try 

{{{
   sudo bbb-conf --check
}}}

which will analyze your current setup and print out any warnings/problems it finds.  Also see Why_did_my_voice_conference_number_worked_in_0.7_but_not_in_0.71.


=== Why can't I resize my portrait document? ===

!BigBlueButton is designed so the viewers of the presentation window are always in sync with the presenter's view.  It's not possible for the presenter to point at something and a viewer to say "I don't see what you are pointing at".

To keep the presentation windows in sync, when you upload a presentation (landscape or portrait), the size of the presentation window becomes a ratio of the presentation.  You and viewer may have different sized windows, due to the sizes of your respective monitors, but you both always see the same content.  As of !BigBlueButton 0.71, this mode is equivalent to always running in "fit to page" mode.  A presenter can zoom in and out, and when you zoom out completely !BigBlueButton shows the entire page.

For landscape documents, the "fit to page" approach works well.  Monitors are landscape, so presenting a landscape document makes good use of the screen space.  

However, for portrait documents, the "fit to page" approach means that text is usually too small to read.  The presenter can zoom in to a portion of the document, but !BigBlueButton does not change the width of the presentation window itself -- it's keeping that ratio to ensure both presenter and viewer are in sync.

We plan to add a "fit to width" option in !BigBlueButton in a future iteration, one that both keeps the viewers and presenters in sync, but allows the presenter to better show portrait documents.  


=== When I click on the headset icon, nothing happens? ===

First, as with most errors, run

{{{
   sudo bbb-conf --check
}}}

To see if it can determine configuration errors.

If you are running !BigBlueButton on EC2, then note that EC2 uses both a public and private IP address.   For example, on an EC2 instance if you type `ifconfig` you'll see that eth0 is bound to an internal private IP address.

Here's a sample output: 
{{{
eth0      Link encap:Ethernet  HWaddr 12:31:33:22:25:c2
          inet addr:10.242.78.44  Bcast:10.242.7.255  Mask:255.255.254.0
          inet6 addr: fe80::1034:33ff:fd02:23c2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:4004469 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5024657 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:642594447 (642.5 MB)  TX bytes:2670592958 (2.6 GB)
}}}

!BigBlueButton needs to use the private (not public) IP address of the EC2 instance to connect to FreeSWITCH.  To do this, 

  # Edit /usr/share/red5/webapps/sip/WEB-INF/bigbluebutton-sip.properties
  # Change the property for sip.server.host for the internal IP address of the EC2 instance
  # Type `sudo bbb-conf --clean` to do a clean restart of !BigBlueButton.

After you do this, typing `sudo bbb-conf --clean` will report an 'IP does not match' warning, but you can ignore it.  In most cases, this would be an error, but on EC2 !BigBlueButton must use the private IP for connecting to FreeSWITCH, but the rest of !BigBlueButton must use the public IP (or hostname) for the configuration to work.

If you are a developer making changes to !BigBlueButton, you can also check
 * look at the [http://code.google.com/p/bigbluebutton/wiki/ConfigurationFiles#/usr/share/red5/log/sip.log sip.log] and look for errors.
 * Open up asterisk console {{{sudo asterisk -vvvvvvr}}} and then try clicking on the headset icon on the client again. Look at the logs on the asterisk console for clues.
 * Make sure [http://code.google.com/p/bigbluebutton/source/browse/trunk/bbb-voice/src/main/webapp/WEB-INF/bigbluebutton-sip.properties /usr/share/red5/webapps/sip/WEB-INF/bigbluebutton-sip.properties] (startRtpPort and stopRtpPort) has entries in [http://code.google.com/p/bigbluebutton/source/browse/trunk/bbb-voice-conference/config/asterisk/bbb_sip.conf /etc/asterisk/bbb_sip.conf]
 * If you are using Asterisk, make sure your conference number is at least 5-digits as defined by {{{exten => _XXXX.,n,Konference(${EXTEN},H)}}} in [http://code.google.com/p/bigbluebutton/source/browse/trunk/bbb-voice-conference/config/asterisk/bbb_extensions.conf /etc/asterisk/bbb_extensions.conf] 


=== Using the API examples I get an java.lang.!NullPointerException when trying to join a room ===

Using the API demos, after reconfiguring your networking or changing the hostname, you may see

{{{
Status Code: 500
Exception Type: null
Message:  null
Exception: java.lang.NullPointerException
   at org.apache.jsp.demo.demo1_jsp.getJoinURL(demo1_jsp.java:168)
   at org.apache.jsp.demo.demo1_jsp._jspService(demo1_jsp.java:624)
   at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java
   ...
}}}

That error is thrown by line 168 of bbb_api.jsp.  Here's the surrounding code

{{{
try {
   // Attempt to create a meeting using meetingID
   String xml = getURL(base_url_create + create_parameters +
"&checksum=" + checksum("create" + create_parameters + salt) );
   doc = parseXml(xml);
} catch (Exception e) {
   e.printStackTrace(); /* 168 */
}
}}}


What happens is that the `getURL()` command isn't returning valid XML, and
that is causing `parseXml()` to fail and throw an exception.  

The main reason `getURL()` fails is the URL it's passed isn't valid.  This URL is built using the variable `base_url_create`, which is created from the parameters set in bbb_api_conf.jsp, which are located in

{{{
   /var/lib/tomcat6/webapps/bigbluebutton/demo/bbb_api_conf.jsp
}}}

You'll see two parameters defined:

{{{
<%!
  // This is the security salt that must match the value set in the
BigBlueButton server
  String salt = "<salt>";
  // This is the URL for the BigBlueButton server
  String BigBlueButtonURL = "http://<your_hostname>/bigbluebutton/";
%>
}}}

What's likely happening is that !BigBlueButtonURL isn't resolving to a
valid host.  You can verify by using it's value to interactively make an API call from your browser.  To do this, enter the following URL in your browser

{{{
   http://<your_hostname>/bigbluebutton/api/isMeetingRunning?meetingID=abcdef
}}}

Of course, you won't have meeting abcdef running, but you *should* get
back an XML file similar to the following:

{{{
<response>
  <returncode>FAILED</returncode>
  <messageKey>checksumError</messageKey>
  <message>You did not pass the checksum security check</message>
</response>
}}}

Now, this URL isn't actually called by your web browser; rather, it's called by the !BigBlueButton server.  So login to your !BigBlueButton server and enter the following command:

{{{
   wget http://<your_hostname>/bigbluebutton/api/isMeetingRunning?meetingID=abcdef
-O -
}}}

and see if it again returns valid XML.  If you get back a blank document or a server error, then this is the reason why you are getting the above exception.  You need to change your networking setup or the value of !BigBlueButtonURL so that `http://<your_hostname>/bigbluebutton/` correctly resolves on the !BigBlueButton server.

=== All I get is a "Welcome to Nginx" screen" ===
If bbb-conf -c returns:
{{{
** Potential Problems **
                        nginx (conf): no symbolic link in /etc/nginx/sites-enabled for bigbluebutton
}}}
Then you need to add a symbolic link to nginx. Try the following:
{{{
sudo ln -s /etc/nginx/sites-available/bigbluebutton /etc/nginx/sites-enabled/bigbluebutton
sudo /etc/init.d/nginx restart
}}}


=== I have 2 microphones and want to choose with which to join the voice conference ===
When you're inside the client, righclick, go to settings > microphone icon > select microphone, and talk to see if it works by checking the volume bar.

=== When I try to join the conference, I get logged out after loading the modules ===
* Check if !BigBlueButton was able to connect to Asterisk AMI. Open {{{/usr/share/red5/log/bigbluebutton.log}}} and check for errors that has "login to AMI".
* Make sure that red5/webapps/bigbluebutton is running properly. Try tailing {{{tail -f /usr/share/red5/log/bigbluebutton.log}}} and try joining again. Look for clues in the resulting log.

=== My slides upload but never finish converting! ===
Try restarting tomcat6, and then red5. On Ubuntu:
{{{
sudo /etc/init.d/tomcat6 restart
sudo /etc/init.d/red5 restart
}}}


=== bbb-conf --check reports Host IP does not match !BigBlueButton ===

This is really more of a warning than an error.  If you are using a DNS name, and that DNS name resolves to the IP address, or you have an external DNS name that is port forwarded to !BigBlueButton, you can safely ignore the warning.

=== UTF characters won't display correctly in the Client ===
If you're using Linux, UTF characters won't display correctly. This is a Flash limitation and unfortunately there's not much we can do about it.



=== Which log files should I check for errors?  ===
Log and configuration file information can be found [http://code.google.com/p/bigbluebutton/wiki/ConfigurationFiles here]


=== How to access the red5 directory on the VM ===
You might want access to the red5 directory on the Virtual Machine. The following commands will share a shortcut to the red5 folder into your dev directory.

In /usr/share/red5
  sudo chmod go+w log
  sudo chown -R firstuser *

In /home/firstuser/dev
  ln -s /usr/share/red5 red5

=== How to I change the default startup language? ===

By default, the !BigBlueButton client should detect the browser's locale and use that default language accordingly.

The default language is English, but you can change that by modifying the value 

{{{
localeChain = "us_EN";
}}}

in `bigbluebutton/client/BigBlueButton.html`.  You can see the list of languages installed with !BigBlueButton in the directory `/var/www/bigbluebutton/client/locale/`.


== Other Questions ==
=== When will feature X be implemented ===

Keep in mind that !BigBlueButton is largely built by a group of (very determined) open source developers that volunteer their time.   Some of us work for companies that provide commercial support for !BigBlueButton (see http://bigbluebutton.org/support). 

Our goal is to make !BigBlueButton the leading open source web conferencing system for distance education.  That's no small task, and we've been working hard on it for [http://en.wikipedia.org/wiki/BigBlueButton over three years].

Time is a precious commodity.  In general, when planning the next release, we look at the outstanding feature requests and bug fixes in the following order: 
  # What are our (paying) customers asking us to implement?
  # What requirements are on our [RoadMap1dot0 road map] for our target market (distance education)? 
  # What refactoring/features do the [FAQ#BigBlueButton_Committer core committers] believe are necessary to improve the code base/maintainability/usability of the project? 
  # What features are our community asking for (specifically, those not related to distance education, like control of remote desktop)?

For (1), the request of our paying customers come first. This has two benefits: it funds the development of !BigBlueButton and makes sure we keep focused on delivering the requirements for our target market.  For (2), you can see the current development work by looking at our RoadMap; you an also look further ahead to see our roadmap to [RoadMap1dot0 BigBlueButton 1.0].

If you really want to see feature X, helping your organization become (1) is the best way to achieve it.  If the feature you are requesting is not already on our roadmap or in our issue tracker, you could open a [http://code.google.com/p/bigbluebutton/issues/list new issue] request and make a convincing argument that the feature belongs in (2).

!BigBlueButton is an open source project.  Anyone with the necessary skills can roll up their sleeves and try their hand at implementing a needed feature.  See [http://code.google.com/p/bigbluebutton/wiki/FAQ#Contributing_to_BigBlueButton Contributing to BigBlueButton]).

=== My Mac iSight camera no longer works in !BigBlueButton after a system update to Mac OS X 10.6.5 ===

There were some problems with the latest Flash update on Mac OS X.  See this [http://discussions.apple.com/thread.jspa?messageID=12641342&#12641342 Apple Support thread] for suggested solutions.

=== Why is my webcam image upside down? ===

We've occasionally seen this and it's almost always a driver issue.  A quick [http://www.google.ca/search?sourceid=chrome&ie=UTF-8&q=flash+webcam+upside+down google search] reveals some discussion threads of others who are experiencing the same issue with Flash.

=== How can I donate or help the project ===
The !BigblueButton project doesn't take donations. If you'd like to help out, consider [FAQ#How_do_I_join_the_BigBlueButton_development_team? joining the development team].

If you are not a developer, the biggest way you can help is SPREAD THE WORD about this project.  Blog about it, tweet about it, and share your experiences (good, bad, and ugly) with others.

We love hearing the experiences of others using !BigBlueButton.  It gives us a lot of pride when we see another school or college adopt !BigBlueButton to teach their remote students.

=== How do I change the brand of !BigBlueButton? ===
There have been a number of companies (and individuals) posting to the
mailing list asking for help in branding !BigBlueButton. 

In recent releases you can now [Branding skin] the !BigBlueButton interface.  However, the URL shows the word bigbluebutton.  There are lot of places in the code that need to be manually changed (and tested) to change this string, and these manual changes would need
to be updated (and tested anew) for each new version of !BigBlueButton that
is released every 8-12 weeks.

From the point of view of the open source project, having the word bigbluebutton in the URL spreads awareness of the project and increases the community, which benefits everyone.  We know that many companies have released products based on !BigBlueButton, and they enjoy the commercial benefits of building on open source, and the project enjoys the increased awareness.  Everyone wins.

Still, from time to time, we see individual posts in our developer mailing list (usually from a commercial company wanting to represent the product as their own) asking for help to completely remove all references to !BigBlueButton.  Rather than have the core developers support such branding efforts, we believe best option is to have the individual contact one of the companies that provide [http://bigbluebutton.org/support commercial support] for !BigBlueButton.

Doing this removes the inevitable problems that arise when manual code changes break in a new release and flood of forum posts ensue with the title "My
branding changes no longer work -- please help me!!"

Most importantly for everyone, the efforts to support a [http://en.wikipedia.org/wiki/White-label_product white labeled] version of !BigBlueButton won't take away from core
development, but will rather support it.


=== Is the scheduling interface in bbb-web still supported? ===

As of !BigBlueButton 0.63, we started transitioning away from the grails-based interface for scheduling conferences, located at http://ip/bigbluebutton.  We've found that most of our developers want to integrate !BigBlueButton into their application, so we've shifted focus to the !BigBlueButton API.

There are also some legacy stuff in the bbb-web interface, such as limiting the number of users, that is not implemented yet and we'll be properly implementing in the API.  

It may be in the future that the bbb-web interface is reborn and becomes a reference implementation of how to use the API, but we're currently focusing on providing examples through .jsp pages, which are much more portable and brandable for our users. 