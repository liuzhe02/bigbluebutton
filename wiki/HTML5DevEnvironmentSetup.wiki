#summary Set up a development environment for the BigBlueButton HTML5 client

= HTML5 Development Environment Setup =

<wiki:toc max_depth="2" />

== Initial setup ==

Before you begin, you will need to have a BigBlueButton server installed from packages. For best results, start with the BigBlueButton 0.81-development packages, as the HTML5 client is based on this version. Follow the instructions on [081InstallationUbuntu] for details.

You then have to convert your installation to a development environment, since the HTML5 client is on a separate branch and requires some components to be rebuilt.

You can follow the instructions at [DevelopingBBB] with the following changes:

  * Under "Checking out the source", use the git command `git checkout -b html5-bridge origin/html5-bridge` to switch to the HTML5 client branch.
  * At a minimum, you must build and deploy or run the Client, BBB-Web, and Red5 Applications components.

== HTML5 Bridge component ==

=== Installation ===

The HTML5 bridge component is currently written using node.js. Since Ubuntu 10.04 doesn't ship an up-to-date version of node.js, it's easiest to use a PPA:

{{{
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs npm
}}}

Now you can use `npm` to install the node.js dependencies:

{{{
cd ~/dev/bigbluebutton/labs/bbb-html5-client
npm install
}}}

=== Running ===

The HTML5 client uses the redis database to store information about the meetings. Right now, there isn't an "automatic" way to delete the keys, so it's recommended that each time that you run the html5 client, you should clean the redis database.

Clean the database: 

{{{
redis-cli flushdb
}}}

Perform a clean restart of BigBlueButton

{{{
sudo bbb-conf --clean
}}}

Run the HTML5 client bridge:

{{{
cd ~/dev/bigbluebutton/labs/bbb-html5-client
node app.js
}}}

=== Usage ===

  1.  Before using the HTML5 client, you must create a meeting and join it using the Flash client. The easiest way to do this is to join the Demo Meeting.
  2.  Open another tab or a new browser
  3.  Go to the address: http://yourIP:3000
  4.  Demo Meeting should appear from the dropdown menu
  5.  Write your name and you will join to the meeting throught the HTML5 client 

What is working?

  *  Users module: Join, leave, get list of participants, change presenter
  *  Chat Module: send public chat, get history chat
  *  Presentation Module: load slides from Flex client, change slide, red dot
  *  Whiteboard Module: Draw and store pencil shape from Flex client 

== Streaming Audio ==

Note that the streaming code is still a work in progress! The following instructions were correct at time of writing, but are subject to change.

In the current prototype, streaming audio is achieved by using the freeswitch mod_shout module to stream audio via an icecast server. This requires installing some additional software and doing some manual configuration.

=== Icecast ===

The stock Ubuntu 10.04 packages for icecast are sufficient for mp3 or vorbis format streaming. You can install them with the command

{{{
apt-get install icecast2
}}}

You will be prompted during installation to enter several passwords. You'll need to remember the "source" password for later when configuring BigBlueButton

=== Freeswitch ===

The build of freeswitch included with the BigBlueButton packaging doesn't have the shoutcast module enabled, so we'll have to build an updated version.

Before starting, stop the current freeswitch:

{{{
/etc/init.d/bbb-freeswitch stop
}}}

Here are the steps:

{{{
sudo apt-get install autoconf automake libtool
cd ~/dev
git clone git://git.freeswitch.org/freeswitch.git
cd freeswitch
./bootstrap.sh
}}}

You now have to edit the file `modules.conf` in the freeswitch build directory, and ensure that the line saying `formats/mod_shout` is uncommented. Then continue with configuring, building, and installing:

{{{
./configure
make
sudo make install
}}}

This will install a new copy of freeswitch into /usr/local/freeswitch (the standard freeswitch install is under /opt/freeswitch). To get it running requires a few additional steps. First, you should copy the configuration from the BigBlueButton freeswitch to your new build:

{{{
sudo mv /usr/local/freeswitch/conf /usr/local/freeswitch/conf.dist
sudo cp -R /opt/freeswitch/conf /usr/local/freeswitch/conf
}}}

You need to edit the file `/usr/local/freeswitch/conf/autoload_configs/modules.conf.xml` to uncomment the line that loads mod_shout.

Now, reset the permissions on the installed directories:

{{{
sudo chown -R freeswitch:daemon /usr/local/freeswitch
}}}

And edit the init script `/etc/init.d/bbb-freeswitch`, and replace all references to /opt with /usr/local (make sure you get them all!) You can then start the new freeswitch,

{{{
/etc/init.d/bbb-freeswitch start
}}}

=== Configuring BigBlueButton ===