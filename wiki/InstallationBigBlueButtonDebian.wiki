#summary How to install BigBlueButton on Debian

Author: Wagner Spirigoni

= Introduction =
This guide will show how to install !BigBlueButton 0.70 on Debian Squeeze 32-bit.

Log in as root to avoid having to type sudo in front of most of the commands required to install BigBlueButton.

{{{
su -
}}}

Check if you have a internet connection

{{{
ping www.google.com
}}}

= Installing =
== APT ==
First let's configure the mirrors of apt

add the following mirror to /etc/apt/sources.list

{{{
echo "deb http://ftp.debian.org/ squeeze main non-free contrib" >> /etc/apt/sources.list
}}}

Syncronize apt with mirrors

{{{
apt-get update
}}}

Upgrade your system

{{{
apt-get upgrade
}}}

Install the headers of you kernel

{{{
apt-get install linux-headers-`uname -r`
}}}

== Necessary Packages ==
Install the necessary packages that we need to use BigBlueButton.

{{{
apt-get install sudo build-essential mysql-server sun-java6-jdk jsvc tomcat6 imagemagick nginx openoffice.org libjpeg62-dev libjpeg62 libfreetype6-dev libfreetype6 libgif-dev libgif4 libungif4-dev libungif-bin libncurses5-dev libxml2-dev subversion
}}}

== Install swftools ==

{{{
cd /usr/src/
wget http://www.swftools.org/swftools-0.9.1.tar.gz
tar -xvzf swftools-0.9.1.tar.gz
cd swftools-0.9.1
./configure
make
make install
}}}

== Install ActiveMQ ==

{{{
cd /tmp
wget http://apache.mirror.rafal.ca/activemq/apache-activemq/5.2.0/apache-activemq-5.2.0-bin.tar.gz
tar zxvf apache-activemq-5.2.0-bin.tar.gz
mv /tmp/apache-activemq-5.2.0 /usr/share/activemq
chown -R root.root /usr/share/activemq
}}}

== Install Red5 ==

{{{
cd /tmp
wget http://bigbluebutton.org/downloads/0.70/red5-0.9.1.tar.gz
tar xvf red5-0.9.1.tar.gz
mv /tmp/red5-0.9.1 /usr/share/red5
adduser --system --home /usr/share/red5/ --no-create-home --group --disabled-password --shell /bin/false red5
}}}

Create the logs files and the log folder of tomcat if this doesn't exist

{{{
touch /usr/share/red5/log/sip.log
touch /usr/share/red5/log/video.log 
touch /usr/share/red5/log/bigbluebutton.log 

test -d /var/log/tomcat6 || mkdir /var/log/tomcat6

chown -R root.root /usr/share/red5
chown -R red5:adm /usr/share/red5/log/
chmod 755 /usr/share/red5/log/
chgrp red5 /usr/share/red5/webapps/
chmod 775 /usr/share/red5/webapps/

mkdir /var/log/bigbluebutton
touch /var/log/bigbluebutton/bbb-web.log
chmod 777 /var/log/bigbluebutton/bbb-web.log
}}}

== Daemon Files ==

{{{
wget http://bigbluebutton.googlecode.com/files/red5-ubuntu -o /etc/init.d/red5
wget http://bigbluebutton.googlecode.com/files/activemq-ubuntu -o /etc/init.d/activemq
wget http://www.bigbluebutton.org/downloads/0.70/ubuntu-install/bbb-openoffice-headless -o /etc/init.d/bbb-openoffice-headless

chmod +x /etc/init.d/red5
chmod +x /etc/init.d/activemq
chmod +x /etc/init.d/bbb-openoffice-headless

/etc/init.d/red5 start

/etc/init.d/bbb-openoffice-headless start
}}}

Add then to start on boot

{{{
update-rc.d -f activemq start 99 2 3 4 5 
update-rc.d -f red5 start 98 2 3 4 5 
update-rc.d -f tomcat6 start 97 2 3 4 5
update-rc.d -f bbb-openoffice-headless start 96 2 3 4 5  
}}}

== Install Asterisk ==

We need to create a link to the kernel headers that we installed, so dahdi can found the right kernel, to do this, go back to /usr/src and create a link as bellow:

{{{
cd /usr/src/
ln -s /usr/src/linux-headers-2.6.32.5-686 /usr/src/linux
}}}

Change to fit your kernel version

Now let's download the sources of what we need:

{{{
cd /usr/src
wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-1.6.2.9.tar.gz
wget http://downloads.asterisk.org/pub/telephony/dahdi-linux/dahdi-linux-2.4.0.tar.gz
wget http://github.com/jthomerson/AsteriskAudioKonf/tarball/master/
}}}

=== Install Dahdi ===

{{{
cd /usr/src
tar -xvvzf dahdi-linux-2.4.0.tar.gz
cd /usr/src/dahdi-linux-2.4.0/drivers/dahdi/
}}}

Edit the file Kbuild uncommenting the line
{{{
obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_DUMMY)            += dahdi_dummy.o
}}}

and commenting the lines bellow:

{{{
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCT4XXP)           += wct4xxp/ 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCTC4XXP)          += wctc4xxp/ 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCTDM24XXP)        += wctdm24xxp/ 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCTE12XP)          += wcte12xp/ 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCTDM)             += wctdm.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_VOICEBUS)          += voicebus/ 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCB4XXP)           += wcb4xxp/ 

#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCT1XXP)           += wct1xxp.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCTE11XP)          += wcte11xp.o 

#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_WCFXO)             += wcfxo.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_TOR2)              += tor2.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_PCIRADIO)          += pciradio.o 

#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_XPP)               += xpp/ 
 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_ECHOCAN_JPAH)      += dahdi_echocan_jpah.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_ECHOCAN_STEVE)     += dahdi_echocan_sec.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_ECHOCAN_STEVE2)    += dahdi_echocan_sec2.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_ECHOCAN_KB1)       += dahdi_echocan_kb1.o 
#obj-$(DAHDI_BUILD_ALL)$(CONFIG_DAHDI_ECHOCAN_MG2)       += dahdi_echocan_mg2.o
}}}

Save and exit

Now compile it

{{{
cd /usr/src/dahdi-linux-2.4.0
make
make install
}}}

=== Asterisk ===

{{{
cd /usr/src/
tar -xvvzf asterisk-1.6.2.9.tar.gz
cd asterisk-1.6.2.9
./configure
make
make install
make samples
}}}

Copy the daemon file of asterisk to /etc/init.d/

{{{
cp contrib/init.d/rc.debian.asterisk /etc/init.d/asterisk
chmod +x /etc/init.d/asterisk
}}}

Change the lines 24, 25 and 26 to fit our configuration:

{{{
DAEMON=/usr/sbin/asterisk
ASTVARRUNDIR=/var/run/asterisk
ASTETCDIR=/etc/asterisk
}}}

Save and exit the file

=== app_konference ===

Let's compile app_konference

{{{
cd /usr/src/
tar -xvvzf jthomerson-AsteriskAudioKonf-genconf_v1.0.3-27-g3f63305.tar.gz
cd jthomerson-AsteriskAudioKonf-3f63305/konference
}}}

Let's edit Makefile and change the include variable:

{{{
vim Makefile

ASTERISK_INCLUDE_DIR ?= /usr/include 
}}}

Save and exit

then compile

{{{
make
make install
}}}

=== Configuration files ===

{{{
wget http://bigbluebutton.org/downloads/0.70/bbb_extensions.conf
mv bbb_extensions.conf /etc/asterisk/
wget http://bigbluebutton.org/downloads/0.70/bbb_sip.conf
mv bbb_sip.conf /etc/asterisk/bbb_sip.conf

echo "#include \"bbb_extensions.conf\"" >> /etc/asterisk/extensions.conf
echo "#include \"bbb_sip.conf\"" >> /etc/asterisk/sip.conf

echo "load => app_konference.so" >> /etc/asterisk/modules.conf

cat /etc/asterisk/manager.conf | sed 's/^enabled = no/enabled = yes/' > 
/tmp/manager.conf
}}}


== nginX ==

{{{
cd /tmp
wget http://bigbluebutton.org/downloads/0.70/nginx-bigbluebutton.conf
cat nginx-bigbluebutton.conf  | sed "s/192.168.0.136/YOUR-IP/" > /etc/nginx/sites-available/bigbluebutton

rm nginx-bigbluebutton.conf

ln -s /etc/nginx/sites-available/bigbluebutton /etc/nginx/sites-enabled/bigbluebutton
}}}

== BBB Modules ==

Download the bbb modules for later use

{{{
cd /tmp
wget http://bigbluebutton.org/downloads/0.70/packages/bbb-default.tar.gz
wget http://bigbluebutton.org/downloads/0.70/packages/bigbluebutton.war
wget http://bigbluebutton.org/downloads/0.70/packages/video.tar.gz
wget http://bigbluebutton.org/downloads/0.70/packages/bigbluebutton-apps.tar.gz
wget http://bigbluebutton.org/downloads/0.70/packages/client.tar.gz
wget http://bigbluebutton.org/downloads/0.70/packages/sip.tar.gz
wget http://bigbluebutton.org/downloads/0.70/packages/deskshare.tar.gz
}}}

== Tomcat Security ==

{{{
cat /etc/default/tomcat6 | sed "s/#TOMCAT6_SECURITY=YES/TOMCAT6_SECURITY=no/" > /tmp/tomcat6
mv -f /tmp/tomcat6 /etc/default/tomcat6
}}}

== Setup MySQL ==

{{{
mysql -u root -p
create database bigbluebutton_dev;
grant all on bigbluebutton_dev.* to 'bbb'@'localhost' identified by 'secret';
commit;
quit
}}}

== Install bbb-web ==

{{{
cp /tmp/bigbluebutton.war /var/lib/tomcat6/webapps/
}}}

== Generate a GUID ==

For security, you need to generate a GUID. You can use an online GUID generator, such as [http://www.somacon.com/p113.php this] one. Keep this GUID handy as we will need it shortly. 

== Determine PDF2SWF, CONVERT and GS applications ==

{{{
Make a note of where pdf2swf is installed
which pdf2swf
  
You should see something like
/usr/local/bin/pdf2swf
  
Make a note of where the convert application is installed
which convert

You shoud see something like.
/usr/bin/convert

Note where GhostScript is installed
which gs

You shoud see something like.
/usr/bin/gs
}}}

== Edit bbb-web properties ==

vim /var/lib/tomcat6/webapps/bigbluebutton/WEB-INF/classes/bigbluebutton.properties

Change the following:

    * swfToolsDir to the directory where pdf2swf is located
    * imageMagickDir to the directory where convert is located
    * ghostScriptExec to point to the gs executable
    * change bigbluebutton.web.serverURL=http://<YOUR IP>
    * set beans.dynamicConferenceService.securitySalt to be equal to the guid we just generated (i.e. beans.dynamicConferenceService.securitySalt=< YOUR-GUID >) 

== Create noPdfMarkWorkaround.ps ==

Create /etc/bigbluebutton/nopdfmark.ps with the following content:

{{{
%!
/pdfmark {cleartomark} bind def
}}}

== Restart Tomcat6 ==

{{{
/etc/init.d/tomcat6 restart
}}}

== Create the Presentation Upload directory ==

{{{
mkdir /var/bigbluebutton
chown -R tomcat6:adm /var/bigbluebutton
chmod -R 777 /var/bigbluebutton
}}}

== Install bbb-apps ==

{{{
cd /usr/share/red5/webapps
cp /tmp/bigbluebutton-apps.tar.gz ./
tar xvf bigbluebutton-apps.tar.gz
rm -rf bigbluebutton-apps.tar.gz
}}}

== Install Deskshare ==

{{{
cd /usr/share/red5/webapps
cp /tmp/deskshare.tar.gz ./
tar xvf deskshare.tar.gz
rm deskshare.tar.gz
}}}

== Install bbb-video-app ==

{{{
cd /usr/share/red5/webapps
cp /tmp/video.tar.gz ./
tar xvf video.tar.gz
rm video.tar.gz
}}}

== Install bbb-voice-app ==

{{{
cd /usr/share/red5/webapps
cp /tmp/sip.tar.gz ./
tar xvf sip.tar.gz
rm sip.tar.gz
}}}

== Instal bbb-default ==

{{{
test -d /var/www || mkdir /var/www

cd /var/www
cp /tmp/bbb-default.tar.gz ./
tar xvf bbb-default.tar.gz
rm bbb-default.tar.gz
}}}


Now we need to create bbb_api_conf.jsp, which will hold our GUID and the !BigBlueButtonURL. Be sure to replace < YOUR-GUID > and < YOUR-IP > with the GUID we generated earlier and your IP, respectively. 

{{{
echo "<%!
// This is the security salt that must match the value set in the BigBlueButton server
String salt = \"<YOUR-GUID>\";

// This is the URL for the BigBlueButton server
String BigBlueButtonURL = \"http://<YOUR-IP>/bigbluebutton/\";
%>" > /var/lib/tomcat6/webapps/bigbluebutton/demo/bbb_api_conf.jsp
}}}

== Install bbb-client ==

{{{
test -d /var/www/bigbluebutton || mkdir /var/www/bigbluebutton
cd /var/www/bigbluebutton
cp /tmp/client.tar.gz ./
tar xvf client.tar.gz
rm client.tar.gz
}}}

== Edit Client Config ==

{{{
vim /var/www/bigbluebutton/client/conf/config.xml
}}}

* Change the uri to your IP address 

Your config.xml should look something like: 

{{{
<?xml version="1.0" ?>
<config>
    <version>0.4</version>
    <porttest host="192.168.0.120" application="video"/>    
        <modules>

                <module name="VideoModule" url="VideoModule.swf" 
                        uri="rtmp://192.168.0.120/video"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"        
                />
                <module name="ChatModule" url="ChatModule.swf" 
                        uri="rtmp://192.168.0.120/bigbluebutton" 
                        loadNextModule="PresentationModule"     
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"                 
                />
                <module name="ViewersModule" url="ViewersModule.swf" 
                        uri="rtmp://192.168.0.120/bigbluebutton" 
                        host="http://192.168.0.120/bigbluebutton/conference-session/enter"
                        onAppInitEvent="LOAD" loadNextModule="ChatModule"
                        onAppStartEvent="START"
                        onUserLogoutEvent="STOP"
                />      
                <module name="ListenersModule" url="ListenersModule.swf" 
                        uri="rtmp://192.168.0.120/bigbluebutton" 
                        recordingHost="http://192.168.0.120"
                        loadNextModule="DeskShareModule"
                        onUserJoinedEvent="START"
                        onUserLogoutEvent="STOP"
                />
                <module name="PresentationModule" url="PresentationModule.swf" 
                        uri="rtmp://192.168.0.120/bigbluebutton" 
                        host="http://192.168.0.120" 
                        loadNextModule="ListenersModule"
                        onUserJoinedEvent="START" 
                        onUserLogoutEvent="STOP"
                />
                
                <module name="DeskShareModule" url="DeskShareModule.swf" 
                        uri="rtmp://192.168.0.120/deskShare" 
                        onUserJoinedEvent="START" 
                        onUserLogoutEvent="STOP"
                        loadNextModule="PhoneModule"
                />
                
                <module name="PhoneModule" url="PhoneModule.swf" 
                        uri="rtmp://192.168.0.120/sip" 
                        onUserJoinedEvent="START" 
                        onUserLogoutEvent="STOP"
                        loadNextModule="VideoModule"
                />
        </modules>
</config>
}}}

== Install bbb-conf ==

{{{
wget http://github.com/bigbluebutton/bigbluebutton/raw/master/bigbluebutton-config/bin/bbb-conf
mv bbb-conf /usr/local/bin
chmod ugo+x /usr/local/bin/bbb-conf
}}}

== Finish ==

Restart the Services

{{{
bbb-conf --restart
}}}

== Try out BigBlueButton ==

{{{
Go to http://<YOUR-IP> which should display the bbb web page and join the conference! 
}}}