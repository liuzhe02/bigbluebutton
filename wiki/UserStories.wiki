#summary BigBlueButton User Stories
= Introduction =

In this section we have the user stories for the BigBlueButton system listed and updated through out the system development period


= Details =

----

*Title:* Record a session

*AccTest:*

*Priority:*

*Story Points:*

*Description:* The moderator wants a session recorded automatically. Create a VCR module on the server to record the sessions automatically when the session starts and stops when the last user leaves. 
The primary VCR module functions should include:
  * Initialize the recording arguments for the session. 
    * Get room number.
    * Get participants list.
    * Create the required files to record the session.
  * Start recording - record the different events related to the conference room (chat, presentation and voice) 
  * Stop recording - finalize recording (store the data for the session etc) .
  * Terminate the recording process.
 
Session: Audio (MP3), video (FLV), presentation (slides), chat (history), and whiteboard.

Notes: useful classes for recording, FLVWriter (org.red5.io.flv.impl.FLVWriter), RTMPClient (org.red5.server.net.rtmp.RTMPClient)

----

*Title:* VCR

*AccTest?:*

*Priority:*

*Story Points:*

*Description:* module that record a stream of events and store them into a file (or DB system- TODO LATER). 

First attempt: Add the VCR as a new application (Class Application Adapter) to the BBB sever and start recoding automatically when a client joins an empty room (ClientJoin()), then stop recording when the last cient leaves the room (ClientLeave()). 

Components- Event Recorder, Event Writer, add any type of events needs to be extracted (i.e. chat events, presentation, voice conf, etc)

*Issues:*

1. When to start recording- When a moderator logs into a room. When anybody logs into a room. When anybody logs into the voice conference (i.e. audio recording starts).

2. When to stop recording- When a moderator logs out of a room. When nobody is in the room. When everybody logs out of the voice conference (i.e. audio recording stops).

3. Or other option is never stop recrding evnts in the conference rooms. Automatically the server will record all events (e.g. login, conf join, presentaion events, chat events, etc). Record all events and process the data later in the playback module.

4. How to store the data for the audio and the data for the session events. Associating the Audio events with the other session events.
(ideas, use time stamps to associate audio recorded data with the other session events)

----

*Title:* Edit a recorded session

*AccTest:*

*Priority:*

*Story Points:*

*Description:* moderator could remove sections of the clip. 

 * Cut only editing

----

*Title:* Replay a recorded session

*AccTest:*

*Priority:*

*Story Points:*

*Description:* anyone could replay a recorded session in client.


----
       
*Title:* Announce that a session is recorded

*AccTest:*

*Priority:*

*Story Points:*

*Description:* Participants are notified that the session is being recorded.

----

*Title:* Retrieve a list of previously recorded session

*AccTest:*

*Priority:*

*Story Points:*

*Description:* A participants can retrieve a recorded session at a later time.

 * First Stage: Audio.
----

*Title:* Play a video

*AccTest:*

*Priority:*

*Story Points:*

*Description:* a presenter can load and play a video, presenter can push a URL linking the video(YouTube) .

 * First step: link to a YouTube video.

----

*Title:* Test session for dry run

*AccTest:*

*Priority:*

*Story Points:*

*Description:* participants can test system ahead of time

----

*Title:* Periodic check

*AccTest:*

*Priority:*

*Story Points:*

*Description:* system can detect disruption and automatically establish.

  * Example: video disconnected (timeout).

----

*Title:* No setup time 

*AccTest:*

*Priority:*

*Story Points:*

*Description:* Moderator wants to be able to confirm a session is read to proceed without problems.

  * Problems: multiple setups (windows, conference calls, a class etc).

----

*Title:* Schedule a session 

*AccTest:*

*Priority:*

*Story Points:*

*Description:* moderator can schedule a sessions for an event. (e.g. Class, conference etc).

C - create

R - review

U - update

D- delete

----

*Title:* Find Media 

*AccTest:*

*Priority:*

*Story Points:*

*Description:* Look up audio/video from past classes. 

----

*Title:* Switching between slides

*AccTest:*

*Priority:*

*Story Points:*

*Description:* presenter should be able to switch between slide decks to upload a slide.

 * Added value: slide persistent (e.g. Dave callâ€™s large slide deck, pre uploaded slides).

----

*Title:* Progress notification to all participants 

*AccTest:*

*Priority:*

*Story Points:*

*Description:* notifies all participants of progress lengthy uploaded are occurring.

 * Example: when presenter uploads slides, other participants are informed of progress.

----

*Title:* Progress notification to all participants

*AccTest:*

*Priority:*

*Story Points:*

*Description:* notifies all participants of progress lengthy uploaded are occurring.

 * Example: when presenter uploads slides, other participants are informed of progress.

----

*Title:* Persistent slide decks 

*AccTest:*

*Priority:*

*Story Points:*

*Description:* can go back to old side decks (e.g. Go back to old classes), can re upload slide deck for session.

----

*Title:* Good response time for user downloading slides

*AccTest:*

*Priority:*

*Story Points:*

*Description:* Quick download time for all users regardless of speed of respective computer.

 * Example: it turns out full slide deck is downloaded to show thumbnails.

----

*Title:* Late joiners can catch up

*AccTest:*

*Priority:*

*Story Points:*

*Description:* participants can catch up if logged in late (e.g. Chat history).

----

*Title:* Enjoyment meter

*AccTest:*

*Priority:*

*Story Points:*

*Description:* monitor engagement meter of participants (show a graphic).

 * First step: blindsided focus or blindside full screen.

----

*Title:* Dynamic Survey

*AccTest:*

*Priority:*

*Story Points:*

*Description:* moderator can push questions to user.

 * Example: Student questionnaires / quizzes.

----